; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\Flash\Obj\bsp_dout.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\Flash\Obj\bsp_dout.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M3\RealView -I..\..\Malloc -I..\..\User\Modbus -Id:\Keil_v4\ARM\RV31\INC -Id:\Keil_v4\ARM\CMSIS\Include -Id:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Flash\Obj\bsp_dout.crf ..\..\User\bsp\src\bsp_dout.c]
                          THUMB

                          AREA ||i.bsp_DoutOff||, CODE, READONLY, ALIGN=2

                  bsp_DoutOff PROC
;;;50     */
;;;51     void bsp_DoutOff(uint8_t _no)
000000  1e41              SUBS     r1,r0,#1
;;;52     {
;;;53     	_no--;
000002  b2c8              UXTB     r0,r1
;;;54     
;;;55     	if (_no == 0)
000004  b918              CBNZ     r0,|L1.14|
;;;56     	{
;;;57     		GPIO_PORT_DOUT1->BRR = GPIO_PIN_DOUT1;
000006  f44f5180          MOV      r1,#0x1000
00000a  4a01              LDR      r2,|L1.16|
00000c  6151              STR      r1,[r2,#0x14]
                  |L1.14|
;;;58     	}
;;;59     }
00000e  4770              BX       lr
;;;60     
                          ENDP

                  |L1.16|
                          DCD      0x40011000

                          AREA ||i.bsp_DoutOn||, CODE, READONLY, ALIGN=2

                  bsp_DoutOn PROC
;;;32     */
;;;33     void bsp_DoutOn(uint8_t _no)
000000  1e41              SUBS     r1,r0,#1
;;;34     {
;;;35     	_no--;
000002  b2c8              UXTB     r0,r1
;;;36     
;;;37     	if (_no == 0)
000004  b918              CBNZ     r0,|L2.14|
;;;38     	{
;;;39     		GPIO_PORT_DOUT1->BSRR = GPIO_PIN_DOUT1;
000006  f44f5180          MOV      r1,#0x1000
00000a  4a01              LDR      r2,|L2.16|
00000c  6111              STR      r1,[r2,#0x10]
                  |L2.14|
;;;40     	}
;;;41     }
00000e  4770              BX       lr
;;;42     
                          ENDP

                  |L2.16|
                          DCD      0x40011000

                          AREA ||i.bsp_DoutToggle||, CODE, READONLY, ALIGN=2

                  bsp_DoutToggle PROC
;;;68     */
;;;69     void bsp_DoutToggle(uint8_t _no)
000000  2801              CMP      r0,#1
;;;70     {
;;;71     	if (_no == 1)
000002  d105              BNE      |L3.16|
;;;72     	{
;;;73     		GPIO_PORT_DOUT1->ODR ^= GPIO_PIN_DOUT1;
000004  4903              LDR      r1,|L3.20|
000006  68c9              LDR      r1,[r1,#0xc]
000008  f4815180          EOR      r1,r1,#0x1000
00000c  4a01              LDR      r2,|L3.20|
00000e  60d1              STR      r1,[r2,#0xc]
                  |L3.16|
;;;74     	}
;;;75     }
000010  4770              BX       lr
;;;76     
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      0x40011000

                          AREA ||i.bsp_InitDout||, CODE, READONLY, ALIGN=2

                  bsp_InitDout PROC
;;;10     */
;;;11     void bsp_InitDout(void)
000000  b508              PUSH     {r3,lr}
;;;12     {
;;;13     	GPIO_InitTypeDef GPIO_InitStructure;
;;;14     
;;;15     	/* 打开GPIO时钟 */
;;;16     	RCC_APB2PeriphClockCmd(RCC_ALL_DOUT, ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;17     	
;;;18     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00000a  2003              MOVS     r0,#3
00000c  f88d0002          STRB     r0,[sp,#2]
;;;19     	GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;20     	
;;;21     	GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_DOUT1;
000016  0200              LSLS     r0,r0,#8
000018  f8ad0000          STRH     r0,[sp,#0]
;;;22     	GPIO_Init(GPIO_PORT_DOUT1, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  4802              LDR      r0,|L4.40|
000020  f7fffffe          BL       GPIO_Init
;;;23     }
000024  bd08              POP      {r3,pc}
;;;24     
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
                          DCD      0x40011000

                          AREA ||i.bsp_IsDoutOn||, CODE, READONLY, ALIGN=2

                  bsp_IsDoutOn PROC
;;;84     */
;;;85     uint8_t bsp_IsDoutOn(uint8_t _no)
000000  4601              MOV      r1,r0
;;;86     {
;;;87     	if (_no == 1)
000002  2901              CMP      r1,#1
000004  d108              BNE      |L5.24|
;;;88     	{
;;;89     		if ((GPIO_PORT_LED1->ODR & GPIO_PIN_LED1) == 0)
000006  4805              LDR      r0,|L5.28|
000008  6800              LDR      r0,[r0,#0]
00000a  f0100f10          TST      r0,#0x10
00000e  d101              BNE      |L5.20|
;;;90     		{
;;;91     			return 1;
000010  2001              MOVS     r0,#1
                  |L5.18|
;;;92     		}
;;;93     		return 0;
;;;94     	}
;;;95     	return 0;
;;;96     }
000012  4770              BX       lr
                  |L5.20|
000014  2000              MOVS     r0,#0                 ;93
000016  e7fc              B        |L5.18|
                  |L5.24|
000018  2000              MOVS     r0,#0                 ;95
00001a  e7fa              B        |L5.18|
                          ENDP

                  |L5.28|
                          DCD      0x40010c0c

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_dout.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_bsp_dout_c_1ff18637____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_dout_c_1ff18637____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_bsp_dout_c_1ff18637____REVSH|
#line 128
|__asm___10_bsp_dout_c_1ff18637____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
