; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\Flash\Obj\bsp_led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\Flash\Obj\bsp_led.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M3\RealView -I..\..\Malloc -I..\..\User\Modbus -Id:\Keil_v4\ARM\RV31\INC -Id:\Keil_v4\ARM\CMSIS\Include -Id:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Flash\Obj\bsp_led.crf ..\..\User\bsp\src\bsp_led.c]
                          THUMB

                          AREA ||i.bsp_InitLed||, CODE, READONLY, ALIGN=2

                  bsp_InitLed PROC
;;;27     */
;;;28     void bsp_InitLed(void)
000000  b508              PUSH     {r3,lr}
;;;29     {
;;;30     	GPIO_InitTypeDef GPIO_InitStructure;
;;;31     
;;;32     	/* 打开GPIO时钟 */
;;;33     	RCC_APB2PeriphClockCmd(RCC_ALL_LED, ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;34     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE); 
00000a  2101              MOVS     r1,#1
00000c  4608              MOV      r0,r1
00000e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;35     	GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE); 
000012  2101              MOVS     r1,#1
000014  4809              LDR      r0,|L1.60|
000016  f7fffffe          BL       GPIO_PinRemapConfig
;;;36     	/*
;;;37     		配置所有的LED指示灯GPIO为推挽输出模式
;;;38     		由于将GPIO设置为输出时，GPIO输出寄存器的值缺省是0，因此会驱动LED点亮.
;;;39     		这是我不希望的，因此在改变GPIO为输出前，先关闭LED指示灯
;;;40     	*/
;;;41     	bsp_LedOff(1);
00001a  2001              MOVS     r0,#1
00001c  f7fffffe          BL       bsp_LedOff
;;;42     
;;;43     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000020  2003              MOVS     r0,#3
000022  f88d0002          STRB     r0,[sp,#2]
;;;44     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000026  2010              MOVS     r0,#0x10
000028  f88d0003          STRB     r0,[sp,#3]
;;;45     	
;;;46     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED1;
00002c  f8ad0000          STRH     r0,[sp,#0]
;;;47     	GPIO_Init(GPIO_PORT_LED1, &GPIO_InitStructure);
000030  4669              MOV      r1,sp
000032  4803              LDR      r0,|L1.64|
000034  f7fffffe          BL       GPIO_Init
;;;48     }
000038  bd08              POP      {r3,pc}
;;;49     
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x00300200
                  |L1.64|
                          DCD      0x40010c00

                          AREA ||i.bsp_IsLedOn||, CODE, READONLY, ALIGN=2

                  bsp_IsLedOn PROC
;;;109    */
;;;110    uint8_t bsp_IsLedOn(uint8_t _no)
000000  4601              MOV      r1,r0
;;;111    {
;;;112    	if (_no == 1)
000002  2901              CMP      r1,#1
000004  d108              BNE      |L2.24|
;;;113    	{
;;;114    		if ((GPIO_PORT_LED1->ODR & GPIO_PIN_LED1) == 0)
000006  4805              LDR      r0,|L2.28|
000008  6800              LDR      r0,[r0,#0]
00000a  f0100f10          TST      r0,#0x10
00000e  d101              BNE      |L2.20|
;;;115    		{
;;;116    			return 1;
000010  2001              MOVS     r0,#1
                  |L2.18|
;;;117    		}
;;;118    		return 0;
;;;119    	}
;;;120    
;;;121    	return 0;
;;;122    }
000012  4770              BX       lr
                  |L2.20|
000014  2000              MOVS     r0,#0                 ;118
000016  e7fc              B        |L2.18|
                  |L2.24|
000018  2000              MOVS     r0,#0                 ;121
00001a  e7fa              B        |L2.18|
;;;123    
                          ENDP

                  |L2.28|
                          DCD      0x40010c0c

                          AREA ||i.bsp_LedOff||, CODE, READONLY, ALIGN=2

                  bsp_LedOff PROC
;;;75     */
;;;76     void bsp_LedOff(uint8_t _no)
000000  1e41              SUBS     r1,r0,#1
;;;77     {
;;;78     	_no--;
000002  b2c8              UXTB     r0,r1
;;;79     
;;;80     	if (_no == 0)
000004  b910              CBNZ     r0,|L3.12|
;;;81     	{
;;;82     		GPIO_PORT_LED1->BSRR = GPIO_PIN_LED1;
000006  2110              MOVS     r1,#0x10
000008  4a01              LDR      r2,|L3.16|
00000a  6011              STR      r1,[r2,#0]
                  |L3.12|
;;;83     	}
;;;84     }
00000c  4770              BX       lr
;;;85     
                          ENDP

00000e  0000              DCW      0x0000
                  |L3.16|
                          DCD      0x40010c10

                          AREA ||i.bsp_LedOn||, CODE, READONLY, ALIGN=2

                  bsp_LedOn PROC
;;;57     */
;;;58     void bsp_LedOn(uint8_t _no)
000000  1e41              SUBS     r1,r0,#1
;;;59     {
;;;60     	_no--;
000002  b2c8              UXTB     r0,r1
;;;61     
;;;62     	if (_no == 0)
000004  b910              CBNZ     r0,|L4.12|
;;;63     	{
;;;64     		GPIO_PORT_LED1->BRR = GPIO_PIN_LED1;
000006  2110              MOVS     r1,#0x10
000008  4a01              LDR      r2,|L4.16|
00000a  6011              STR      r1,[r2,#0]
                  |L4.12|
;;;65     	}
;;;66     }
00000c  4770              BX       lr
;;;67     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      0x40010c14

                          AREA ||i.bsp_LedToggle||, CODE, READONLY, ALIGN=2

                  bsp_LedToggle PROC
;;;93     */
;;;94     void bsp_LedToggle(uint8_t _no)
000000  2801              CMP      r0,#1
;;;95     {
;;;96     	if (_no == 1)
000002  d105              BNE      |L5.16|
;;;97     	{
;;;98     		GPIO_PORT_LED1->ODR ^= GPIO_PIN_LED1;
000004  4903              LDR      r1,|L5.20|
000006  6809              LDR      r1,[r1,#0]
000008  f0810110          EOR      r1,r1,#0x10
00000c  4a01              LDR      r2,|L5.20|
00000e  6011              STR      r1,[r2,#0]
                  |L5.16|
;;;99     	}
;;;100    }
000010  4770              BX       lr
;;;101    
                          ENDP

000012  0000              DCW      0x0000
                  |L5.20|
                          DCD      0x40010c0c

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_led.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_led_c_ba23b041____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REVSH|
#line 128
|__asm___9_bsp_led_c_ba23b041____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
