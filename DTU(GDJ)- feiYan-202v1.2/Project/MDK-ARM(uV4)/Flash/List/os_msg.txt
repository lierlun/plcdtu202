; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\Flash\Obj\os_msg.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\Flash\Obj\os_msg.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M3\RealView -I..\..\Malloc -I..\..\User\Modbus -Id:\Keil_v4\ARM\RV31\INC -Id:\Keil_v4\ARM\CMSIS\Include -Id:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Flash\Obj\os_msg.crf ..\..\uCOS-III\uCOS-III\Source\os_msg.c]
                          THUMB

                          AREA ||i.OS_MsgPoolInit||, CODE, READONLY, ALIGN=2

                  OS_MsgPoolInit PROC
;;;62     
;;;63     void  OS_MsgPoolInit (OS_ERR  *p_err)
000000  b570              PUSH     {r4-r6,lr}
;;;64     {
000002  4602              MOV      r2,r0
;;;65         OS_MSG      *p_msg1;
;;;66         OS_MSG      *p_msg2;
;;;67         OS_MSG_QTY   i;
;;;68         OS_MSG_QTY   loops;
;;;69     
;;;70     
;;;71     #if (OS_CFG_ARG_CHK_EN == DEF_ENABLED)
;;;72         if (OSCfg_MsgPoolBasePtr == DEF_NULL) {
;;;73            *p_err = OS_ERR_MSG_POOL_NULL_PTR;
;;;74             return;
;;;75         }
;;;76         if (OSCfg_MsgPoolSize == 0u) {
;;;77            *p_err = OS_ERR_MSG_POOL_EMPTY;
;;;78             return;
;;;79         }
;;;80     #endif
;;;81     
;;;82         p_msg1 = OSCfg_MsgPoolBasePtr;
000004  4d12              LDR      r5,|L1.80|
000006  6828              LDR      r0,[r5,#0]  ; OSCfg_MsgPoolBasePtr
;;;83         p_msg2 = OSCfg_MsgPoolBasePtr;
000008  6829              LDR      r1,[r5,#0]  ; OSCfg_MsgPoolBasePtr
;;;84         p_msg2++;
00000a  3110              ADDS     r1,r1,#0x10
;;;85         loops  = OSCfg_MsgPoolSize - 1u;
00000c  4d11              LDR      r5,|L1.84|
00000e  882d              LDRH     r5,[r5,#0]  ; OSCfg_MsgPoolSize
000010  1e6d              SUBS     r5,r5,#1
000012  b2ac              UXTH     r4,r5
;;;86         for (i = 0u; i < loops; i++) {                              /* Init. list of free OS_MSGs                           */
000014  2300              MOVS     r3,#0
000016  e008              B        |L1.42|
                  |L1.24|
;;;87             p_msg1->NextPtr = p_msg2;
000018  6001              STR      r1,[r0,#0]
;;;88             p_msg1->MsgPtr  = DEF_NULL;
00001a  2500              MOVS     r5,#0
00001c  6045              STR      r5,[r0,#4]
;;;89             p_msg1->MsgSize = 0u;
00001e  8105              STRH     r5,[r0,#8]
;;;90     #if (OS_CFG_TS_EN == DEF_ENABLED)
;;;91             p_msg1->MsgTS   = 0u;
000020  60c5              STR      r5,[r0,#0xc]
;;;92     #endif
;;;93             p_msg1++;
000022  3010              ADDS     r0,r0,#0x10
;;;94             p_msg2++;
000024  3110              ADDS     r1,r1,#0x10
000026  1c5d              ADDS     r5,r3,#1              ;86
000028  b2ab              UXTH     r3,r5                 ;86
                  |L1.42|
00002a  42a3              CMP      r3,r4                 ;86
00002c  dbf4              BLT      |L1.24|
;;;95         }
;;;96         p_msg1->NextPtr = DEF_NULL;                                 /* Last OS_MSG                                          */
00002e  2500              MOVS     r5,#0
000030  6005              STR      r5,[r0,#0]
;;;97         p_msg1->MsgPtr  = DEF_NULL;
000032  6045              STR      r5,[r0,#4]
;;;98         p_msg1->MsgSize = 0u;
000034  8105              STRH     r5,[r0,#8]
;;;99     #if (OS_CFG_TS_EN == DEF_ENABLED)
;;;100        p_msg1->MsgTS   = 0u;
000036  60c5              STR      r5,[r0,#0xc]
;;;101    #endif
;;;102    
;;;103        OSMsgPool.NextPtr    = OSCfg_MsgPoolBasePtr;
000038  4d05              LDR      r5,|L1.80|
00003a  682d              LDR      r5,[r5,#0]  ; OSCfg_MsgPoolBasePtr
00003c  4e06              LDR      r6,|L1.88|
00003e  6035              STR      r5,[r6,#0]  ; OSMsgPool
;;;104        OSMsgPool.NbrFree    = OSCfg_MsgPoolSize;
000040  4d04              LDR      r5,|L1.84|
000042  882d              LDRH     r5,[r5,#0]  ; OSCfg_MsgPoolSize
000044  80b5              STRH     r5,[r6,#4]
;;;105        OSMsgPool.NbrUsed    = 0u;
000046  2500              MOVS     r5,#0
000048  80f5              STRH     r5,[r6,#6]
;;;106    #if (OS_CFG_DBG_EN == DEF_ENABLED)
;;;107        OSMsgPool.NbrUsedMax = 0u;
00004a  8135              STRH     r5,[r6,#8]
;;;108    #endif
;;;109       *p_err                =  OS_ERR_NONE;
00004c  8015              STRH     r5,[r2,#0]
;;;110    }
00004e  bd70              POP      {r4-r6,pc}
;;;111    
                          ENDP

                  |L1.80|
                          DCD      OSCfg_MsgPoolBasePtr
                  |L1.84|
                          DCD      OSCfg_MsgPoolSize
                  |L1.88|
                          DCD      OSMsgPool

                          AREA ||i.OS_MsgQFreeAll||, CODE, READONLY, ALIGN=2

                  OS_MsgQFreeAll PROC
;;;127    
;;;128    OS_MSG_QTY  OS_MsgQFreeAll (OS_MSG_Q  *p_msg_q)
000000  b510              PUSH     {r4,lr}
;;;129    {
000002  4601              MOV      r1,r0
;;;130        OS_MSG      *p_msg;
;;;131        OS_MSG_QTY   qty;
;;;132    
;;;133    
;;;134    
;;;135        qty = p_msg_q->NbrEntries;                                  /* Get the number of OS_MSGs being freed                */
000004  8948              LDRH     r0,[r1,#0xa]
;;;136        if (p_msg_q->NbrEntries > 0u) {
000006  894b              LDRH     r3,[r1,#0xa]
000008  b1bb              CBZ      r3,|L2.58|
;;;137            p_msg                   = p_msg_q->InPtr;               /* Point to end of message chain                        */
00000a  680a              LDR      r2,[r1,#0]
;;;138            p_msg->NextPtr          = OSMsgPool.NextPtr;
00000c  4b0b              LDR      r3,|L2.60|
00000e  681b              LDR      r3,[r3,#0]  ; OSMsgPool
000010  6013              STR      r3,[r2,#0]
;;;139            OSMsgPool.NextPtr       = p_msg_q->OutPtr;              /* Point to beginning of message chain                  */
000012  4c0a              LDR      r4,|L2.60|
000014  684b              LDR      r3,[r1,#4]
000016  6023              STR      r3,[r4,#0]  ; OSMsgPool
;;;140            OSMsgPool.NbrUsed      -= p_msg_q->NbrEntries;          /* Update statistics for free list of messages          */
000018  4623              MOV      r3,r4
00001a  88db              LDRH     r3,[r3,#6]  ; OSMsgPool
00001c  894c              LDRH     r4,[r1,#0xa]
00001e  1b1b              SUBS     r3,r3,r4
000020  4c06              LDR      r4,|L2.60|
000022  80e3              STRH     r3,[r4,#6]
;;;141            OSMsgPool.NbrFree      += p_msg_q->NbrEntries;
000024  4623              MOV      r3,r4
000026  889b              LDRH     r3,[r3,#4]  ; OSMsgPool
000028  894c              LDRH     r4,[r1,#0xa]
00002a  4423              ADD      r3,r3,r4
00002c  4c03              LDR      r4,|L2.60|
00002e  80a3              STRH     r3,[r4,#4]
;;;142            p_msg_q->NbrEntries     = 0u;                           /* Flush the message queue                              */
000030  2300              MOVS     r3,#0
000032  814b              STRH     r3,[r1,#0xa]
;;;143    #if (OS_CFG_DBG_EN == DEF_ENABLED)
;;;144            p_msg_q->NbrEntriesMax  = 0u;
000034  818b              STRH     r3,[r1,#0xc]
;;;145    #endif
;;;146            p_msg_q->InPtr          = DEF_NULL;
000036  600b              STR      r3,[r1,#0]
;;;147            p_msg_q->OutPtr         = DEF_NULL;
000038  604b              STR      r3,[r1,#4]
                  |L2.58|
;;;148        }
;;;149        return (qty);
;;;150    }
00003a  bd10              POP      {r4,pc}
;;;151    
                          ENDP

                  |L2.60|
                          DCD      OSMsgPool

                          AREA ||i.OS_MsgQGet||, CODE, READONLY, ALIGN=2

                  OS_MsgQGet PROC
;;;206    
;;;207    void  *OS_MsgQGet (OS_MSG_Q     *p_msg_q,
000000  b5f0              PUSH     {r4-r7,lr}
;;;208                       OS_MSG_SIZE  *p_msg_size,
;;;209                       CPU_TS       *p_ts,
;;;210                       OS_ERR       *p_err)
;;;211    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;212        OS_MSG  *p_msg;
;;;213        void    *p_void;
;;;214    
;;;215    
;;;216    #if (OS_CFG_TS_EN == DEF_DISABLED)
;;;217        (void)p_ts;                                                 /* Prevent compiler warning for not using 'ts'          */
;;;218    #endif
;;;219    
;;;220        if (p_msg_q->NbrEntries == 0u) {                            /* Is the queue empty?                                  */
000006  8960              LDRH     r0,[r4,#0xa]
000008  b940              CBNZ     r0,|L3.28|
;;;221           *p_msg_size = 0u;                                        /* Yes                                                  */
00000a  2000              MOVS     r0,#0
00000c  8028              STRH     r0,[r5,#0]
;;;222    #if (OS_CFG_TS_EN == DEF_ENABLED)
;;;223            if (p_ts != DEF_NULL) {
00000e  b102              CBZ      r2,|L3.18|
;;;224               *p_ts = 0u;
000010  6010              STR      r0,[r2,#0]
                  |L3.18|
;;;225            }
;;;226    #endif
;;;227           *p_err = OS_ERR_Q_EMPTY;
000012  f2465092          MOV      r0,#0x6592
000016  8018              STRH     r0,[r3,#0]
;;;228            return (DEF_NULL);
000018  2000              MOVS     r0,#0
                  |L3.26|
;;;229        }
;;;230    
;;;231        p_msg           = p_msg_q->OutPtr;                          /* No, get the next message to extract from the queue   */
;;;232        p_void          = p_msg->MsgPtr;
;;;233       *p_msg_size      = p_msg->MsgSize;
;;;234    #if (OS_CFG_TS_EN == DEF_ENABLED)
;;;235        if (p_ts != DEF_NULL) {
;;;236           *p_ts = p_msg->MsgTS;
;;;237        }
;;;238    #endif
;;;239    
;;;240        p_msg_q->OutPtr = p_msg->NextPtr;                           /* Point to next message to extract                     */
;;;241    
;;;242        if (p_msg_q->OutPtr == DEF_NULL) {                          /* Are there any more messages in the queue?            */
;;;243            p_msg_q->InPtr      = DEF_NULL;                         /* No                                                   */
;;;244            p_msg_q->NbrEntries = 0u;
;;;245        } else {
;;;246            p_msg_q->NbrEntries--;                                  /* Yes, One less message in the queue                   */
;;;247        }
;;;248    
;;;249        p_msg->NextPtr    = OSMsgPool.NextPtr;                      /* Return message control block to free list            */
;;;250        OSMsgPool.NextPtr = p_msg;
;;;251        OSMsgPool.NbrFree++;
;;;252        OSMsgPool.NbrUsed--;
;;;253    
;;;254       *p_err             = OS_ERR_NONE;
;;;255        return (p_void);
;;;256    }
00001a  bdf0              POP      {r4-r7,pc}
                  |L3.28|
00001c  6861              LDR      r1,[r4,#4]            ;231
00001e  684e              LDR      r6,[r1,#4]            ;232
000020  8908              LDRH     r0,[r1,#8]            ;233
000022  8028              STRH     r0,[r5,#0]            ;233
000024  b10a              CBZ      r2,|L3.42|
000026  68c8              LDR      r0,[r1,#0xc]          ;236
000028  6010              STR      r0,[r2,#0]            ;236
                  |L3.42|
00002a  6808              LDR      r0,[r1,#0]            ;240
00002c  6060              STR      r0,[r4,#4]            ;240
00002e  6860              LDR      r0,[r4,#4]            ;242
000030  b918              CBNZ     r0,|L3.58|
000032  2000              MOVS     r0,#0                 ;243
000034  6020              STR      r0,[r4,#0]            ;243
000036  8160              STRH     r0,[r4,#0xa]          ;244
000038  e002              B        |L3.64|
                  |L3.58|
00003a  8960              LDRH     r0,[r4,#0xa]          ;246
00003c  1e40              SUBS     r0,r0,#1              ;246
00003e  8160              STRH     r0,[r4,#0xa]          ;246
                  |L3.64|
000040  4808              LDR      r0,|L3.100|
000042  6800              LDR      r0,[r0,#0]            ;249  ; OSMsgPool
000044  6008              STR      r0,[r1,#0]            ;249
000046  4807              LDR      r0,|L3.100|
000048  6001              STR      r1,[r0,#0]            ;250  ; OSMsgPool
00004a  8880              LDRH     r0,[r0,#4]            ;251  ; OSMsgPool
00004c  1c40              ADDS     r0,r0,#1              ;251
00004e  4f05              LDR      r7,|L3.100|
000050  80b8              STRH     r0,[r7,#4]            ;251
000052  4638              MOV      r0,r7                 ;252
000054  88c0              LDRH     r0,[r0,#6]            ;252  ; OSMsgPool
000056  1e40              SUBS     r0,r0,#1              ;252
000058  80f8              STRH     r0,[r7,#6]            ;252
00005a  2000              MOVS     r0,#0                 ;254
00005c  8018              STRH     r0,[r3,#0]            ;254
00005e  4630              MOV      r0,r6                 ;255
000060  e7db              B        |L3.26|
;;;257    
                          ENDP

000062  0000              DCW      0x0000
                  |L3.100|
                          DCD      OSMsgPool

                          AREA ||i.OS_MsgQInit||, CODE, READONLY, ALIGN=1

                  OS_MsgQInit PROC
;;;169    
;;;170    void  OS_MsgQInit (OS_MSG_Q    *p_msg_q,
000000  8101              STRH     r1,[r0,#8]
;;;171                       OS_MSG_QTY   size)
;;;172    {
;;;173        p_msg_q->NbrEntriesSize = size;
;;;174        p_msg_q->NbrEntries     = 0u;
000002  2200              MOVS     r2,#0
000004  8142              STRH     r2,[r0,#0xa]
;;;175    #if (OS_CFG_DBG_EN == DEF_ENABLED)
;;;176        p_msg_q->NbrEntriesMax  = 0u;
000006  8182              STRH     r2,[r0,#0xc]
;;;177    #endif
;;;178        p_msg_q->InPtr          = DEF_NULL;
000008  6002              STR      r2,[r0,#0]
;;;179        p_msg_q->OutPtr         = DEF_NULL;
00000a  6042              STR      r2,[r0,#4]
;;;180    }
00000c  4770              BX       lr
;;;181    
                          ENDP


                          AREA ||i.OS_MsgQPut||, CODE, READONLY, ALIGN=2

                  OS_MsgQPut PROC
;;;290    
;;;291    void  OS_MsgQPut (OS_MSG_Q     *p_msg_q,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;292                      void         *p_void,
;;;293                      OS_MSG_SIZE   msg_size,
;;;294                      OS_OPT        opt,
;;;295                      CPU_TS        ts,
;;;296                      OS_ERR       *p_err)
;;;297    {
000004  460d              MOV      r5,r1
000006  e9dd7406          LDRD     r7,r4,[sp,#0x18]
;;;298        OS_MSG  *p_msg;
;;;299        OS_MSG  *p_msg_in;
;;;300    
;;;301    
;;;302    #if (OS_CFG_TS_EN == DEF_DISABLED)
;;;303        (void)ts;                                                   /* Prevent compiler warning for not using 'ts'          */
;;;304    #endif
;;;305    
;;;306        if (p_msg_q->NbrEntries >= p_msg_q->NbrEntriesSize) {
00000a  f8b0c00a          LDRH     r12,[r0,#0xa]
00000e  f8b08008          LDRH     r8,[r0,#8]
000012  45c4              CMP      r12,r8
000014  db05              BLT      |L5.34|
;;;307           *p_err = OS_ERR_Q_MAX;                                   /* Message queue cannot accept any more messages        */
000016  f2465c93          MOV      r12,#0x6593
00001a  f8a4c000          STRH     r12,[r4,#0]
                  |L5.30|
;;;308            return;
;;;309        }
;;;310    
;;;311        if (OSMsgPool.NbrFree == 0u) {
;;;312           *p_err = OS_ERR_MSG_POOL_EMPTY;                          /* No more OS_MSG to use                                */
;;;313            return;
;;;314        }
;;;315    
;;;316        p_msg             = OSMsgPool.NextPtr;                      /* Remove message control block from free list          */
;;;317        OSMsgPool.NextPtr = p_msg->NextPtr;
;;;318        OSMsgPool.NbrFree--;
;;;319        OSMsgPool.NbrUsed++;
;;;320    
;;;321    #if (OS_CFG_DBG_EN == DEF_ENABLED)
;;;322        if (OSMsgPool.NbrUsedMax < OSMsgPool.NbrUsed) {
;;;323            OSMsgPool.NbrUsedMax = OSMsgPool.NbrUsed;
;;;324        }
;;;325    #endif
;;;326    
;;;327        if (p_msg_q->NbrEntries == 0u) {                            /* Is this first message placed in the queue?           */
;;;328            p_msg_q->InPtr         = p_msg;                         /* Yes                                                  */
;;;329            p_msg_q->OutPtr        = p_msg;
;;;330            p_msg_q->NbrEntries    = 1u;
;;;331            p_msg->NextPtr         = DEF_NULL;
;;;332        } else {                                                    /* No                                                   */
;;;333            if ((opt & OS_OPT_POST_LIFO) == OS_OPT_POST_FIFO) {     /* Is it FIFO or LIFO?                                  */
;;;334                p_msg_in           = p_msg_q->InPtr;                /* FIFO, add to the head                                */
;;;335                p_msg_in->NextPtr  = p_msg;
;;;336                p_msg_q->InPtr     = p_msg;
;;;337                p_msg->NextPtr     = DEF_NULL;
;;;338            } else {
;;;339                p_msg->NextPtr     = p_msg_q->OutPtr;               /* LIFO, add to the tail                                */
;;;340                p_msg_q->OutPtr    = p_msg;
;;;341            }
;;;342            p_msg_q->NbrEntries++;
;;;343        }
;;;344    
;;;345    #if (OS_CFG_DBG_EN == DEF_ENABLED)
;;;346        if (p_msg_q->NbrEntriesMax < p_msg_q->NbrEntries) {
;;;347            p_msg_q->NbrEntriesMax = p_msg_q->NbrEntries;
;;;348        }
;;;349    #endif
;;;350    
;;;351        p_msg->MsgPtr  = p_void;                                    /* Deposit message in the message queue entry           */
;;;352        p_msg->MsgSize = msg_size;
;;;353    #if (OS_CFG_TS_EN == DEF_ENABLED)
;;;354        p_msg->MsgTS   = ts;
;;;355    #endif
;;;356       *p_err          = OS_ERR_NONE;
;;;357    }
00001e  e8bd81f0          POP      {r4-r8,pc}
                  |L5.34|
000022  f8dfc0d8          LDR      r12,|L5.252|
000026  f8bcc004          LDRH     r12,[r12,#4]          ;311  ; OSMsgPool
00002a  f1bc0f00          CMP      r12,#0                ;311
00002e  d104              BNE      |L5.58|
000030  f2457c1d          MOV      r12,#0x571d           ;312
000034  f8a4c000          STRH     r12,[r4,#0]           ;312
000038  e7f1              B        |L5.30|
                  |L5.58|
00003a  f8dfc0c0          LDR      r12,|L5.252|
00003e  f8dc1000          LDR      r1,[r12,#0]           ;316  ; OSMsgPool
000042  f8df80b8          LDR      r8,|L5.252|
000046  f8d1c000          LDR      r12,[r1,#0]           ;317
00004a  f8c8c000          STR      r12,[r8,#0]           ;317  ; OSMsgPool
00004e  46c4              MOV      r12,r8                ;318
000050  f8bcc004          LDRH     r12,[r12,#4]          ;318  ; OSMsgPool
000054  f1ac0c01          SUB      r12,r12,#1            ;318
000058  f8a8c004          STRH     r12,[r8,#4]           ;318
00005c  46c4              MOV      r12,r8                ;319
00005e  f8bcc006          LDRH     r12,[r12,#6]          ;319  ; OSMsgPool
000062  f10c0c01          ADD      r12,r12,#1            ;319
000066  f8a8c006          STRH     r12,[r8,#6]           ;319
00006a  46c4              MOV      r12,r8                ;322
00006c  f8bcc008          LDRH     r12,[r12,#8]          ;322  ; OSMsgPool
000070  f8b88006          LDRH     r8,[r8,#6]            ;322  ; OSMsgPool
000074  45c4              CMP      r12,r8                ;322
000076  da07              BGE      |L5.136|
000078  f8dfc080          LDR      r12,|L5.252|
00007c  f8bcc006          LDRH     r12,[r12,#6]          ;323  ; OSMsgPool
000080  f8df8078          LDR      r8,|L5.252|
000084  f8a8c008          STRH     r12,[r8,#8]           ;323
                  |L5.136|
000088  f8b0c00a          LDRH     r12,[r0,#0xa]         ;327
00008c  f1bc0f00          CMP      r12,#0                ;327
000090  d10a              BNE      |L5.168|
000092  6001              STR      r1,[r0,#0]            ;328
000094  6041              STR      r1,[r0,#4]            ;329
000096  f04f0c01          MOV      r12,#1                ;330
00009a  f8a0c00a          STRH     r12,[r0,#0xa]         ;330
00009e  f04f0c00          MOV      r12,#0                ;331
0000a2  f8c1c000          STR      r12,[r1,#0]           ;331
0000a6  e015              B        |L5.212|
                  |L5.168|
0000a8  f0130f10          TST      r3,#0x10              ;333
0000ac  d107              BNE      |L5.190|
0000ae  6806              LDR      r6,[r0,#0]            ;334
0000b0  6031              STR      r1,[r6,#0]            ;335
0000b2  6001              STR      r1,[r0,#0]            ;336
0000b4  f04f0c00          MOV      r12,#0                ;337
0000b8  f8c1c000          STR      r12,[r1,#0]           ;337
0000bc  e004              B        |L5.200|
                  |L5.190|
0000be  f8d0c004          LDR      r12,[r0,#4]           ;339
0000c2  f8c1c000          STR      r12,[r1,#0]           ;339
0000c6  6041              STR      r1,[r0,#4]            ;340
                  |L5.200|
0000c8  f8b0c00a          LDRH     r12,[r0,#0xa]         ;342
0000cc  f10c0c01          ADD      r12,r12,#1            ;342
0000d0  f8a0c00a          STRH     r12,[r0,#0xa]         ;342
                  |L5.212|
0000d4  f8b0c00c          LDRH     r12,[r0,#0xc]         ;346
0000d8  f8b0800a          LDRH     r8,[r0,#0xa]          ;346
0000dc  45c4              CMP      r12,r8                ;346
0000de  da03              BGE      |L5.232|
0000e0  f8b0c00a          LDRH     r12,[r0,#0xa]         ;347
0000e4  f8a0c00c          STRH     r12,[r0,#0xc]         ;347
                  |L5.232|
0000e8  604d              STR      r5,[r1,#4]            ;351
0000ea  810a              STRH     r2,[r1,#8]            ;352
0000ec  60cf              STR      r7,[r1,#0xc]          ;354
0000ee  f04f0c00          MOV      r12,#0                ;356
0000f2  f8a4c000          STRH     r12,[r4,#0]           ;356
0000f6  bf00              NOP      
0000f8  e791              B        |L5.30|
;;;358    #endif
                          ENDP

0000fa  0000              DCW      0x0000
                  |L5.252|
                          DCD      OSMsgPool
