; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\Flash\Obj\cpu_bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\Flash\Obj\cpu_bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M3\RealView -I..\..\Malloc -I..\..\User\Modbus -Id:\Keil_v4\ARM\RV31\INC -Id:\Keil_v4\ARM\CMSIS\Include -Id:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Flash\Obj\cpu_bsp.crf ..\..\User\cpu_bsp.c]
                          THUMB

                          AREA ||i.CPU_TS32_to_uSec||, CODE, READONLY, ALIGN=2

                  CPU_TS32_to_uSec PROC
;;;347    #if (CPU_CFG_TS_32_EN == DEF_ENABLED)
;;;348    CPU_INT64U  CPU_TS32_to_uSec (CPU_TS32  ts_cnts)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;349    {
000004  4682              MOV      r10,r0
;;;350        CPU_INT64U  ts_us;
;;;351        CPU_INT64U  fclk_freq;
;;;352    
;;;353    
;;;354        fclk_freq = BSP_CPU_ClkFreq();
000006  f7fffffe          BL       BSP_CPU_ClkFreq
00000a  f04f0900          MOV      r9,#0
00000e  4680              MOV      r8,r0
;;;355        ts_us     = ts_cnts / (fclk_freq / DEF_TIME_NBR_uS_PER_SEC);
000010  4a09              LDR      r2,|L1.56|
000012  2300              MOVS     r3,#0
000014  4640              MOV      r0,r8
000016  4649              MOV      r1,r9
000018  f7fffffe          BL       __aeabi_uldivmod
00001c  4606              MOV      r6,r0
00001e  4632              MOV      r2,r6
000020  460b              MOV      r3,r1
000022  4650              MOV      r0,r10
000024  2100              MOVS     r1,#0
000026  f7fffffe          BL       __aeabi_uldivmod
00002a  4604              MOV      r4,r0
00002c  460d              MOV      r5,r1
;;;356    
;;;357        return (ts_us);
00002e  4620              MOV      r0,r4
000030  4629              MOV      r1,r5
;;;358    }
000032  e8bd87f0          POP      {r4-r10,pc}
;;;359    #endif
                          ENDP

000036  0000              DCW      0x0000
                  |L1.56|
                          DCD      0x000f4240

                          AREA ||i.CPU_TS_TmrInit||, CODE, READONLY, ALIGN=2

                  CPU_TS_TmrInit PROC
;;;179    #if (CPU_CFG_TS_TMR_EN == DEF_ENABLED)
;;;180    void  CPU_TS_TmrInit (void)
000000  b510              PUSH     {r4,lr}
;;;181    {
;;;182        CPU_INT32U  fclk_freq;
;;;183    
;;;184    
;;;185        fclk_freq = BSP_CPU_ClkFreq();
000002  f7fffffe          BL       BSP_CPU_ClkFreq
000006  4604              MOV      r4,r0
;;;186    
;;;187        CPU_REG_DEM_CR     |= (CPU_INT32U)CPU_BIT_DEM_CR_TRCENA;    /* Enable Cortex-M4's DWT CYCCNT reg.                   */
000008  4808              LDR      r0,|L2.44|
00000a  6800              LDR      r0,[r0,#0]
00000c  f0407080          ORR      r0,r0,#0x1000000
000010  4906              LDR      r1,|L2.44|
000012  6008              STR      r0,[r1,#0]
;;;188        CPU_REG_DWT_CYCCNT  = (CPU_INT32U)0u;
000014  2000              MOVS     r0,#0
000016  4906              LDR      r1,|L2.48|
000018  6048              STR      r0,[r1,#4]
;;;189        CPU_REG_DWT_CR     |= (CPU_INT32U)CPU_BIT_DWT_CR_CYCCNTENA;
00001a  4608              MOV      r0,r1
00001c  6800              LDR      r0,[r0,#0]
00001e  f0400001          ORR      r0,r0,#1
000022  6008              STR      r0,[r1,#0]
;;;190    
;;;191        CPU_TS_TmrFreqSet((CPU_TS_TMR_FREQ)fclk_freq);
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       CPU_TS_TmrFreqSet
;;;192    }
00002a  bd10              POP      {r4,pc}
;;;193    #endif
                          ENDP

                  |L2.44|
                          DCD      0xe000edfc
                  |L2.48|
                          DCD      0xe0001000

                          AREA ||i.CPU_TS_TmrRd||, CODE, READONLY, ALIGN=2

                  CPU_TS_TmrRd PROC
;;;278    #if (CPU_CFG_TS_TMR_EN == DEF_ENABLED)
;;;279    CPU_TS_TMR  CPU_TS_TmrRd (void)
000000  4901              LDR      r1,|L3.8|
;;;280    {
;;;281        CPU_TS_TMR  ts_tmr_cnts;
;;;282    
;;;283    
;;;284        ts_tmr_cnts = (CPU_TS_TMR)CPU_REG_DWT_CYCCNT;
000002  6848              LDR      r0,[r1,#4]
;;;285    
;;;286        return (ts_tmr_cnts);
;;;287    }
000004  4770              BX       lr
;;;288    #endif
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0xe0001000
