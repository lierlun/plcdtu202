; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\Flash\Obj\bsp_din.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\Flash\Obj\bsp_din.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M3\RealView -I..\..\Malloc -I..\..\User\Modbus -Id:\Keil_v4\ARM\RV31\INC -Id:\Keil_v4\ARM\CMSIS\Include -Id:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Flash\Obj\bsp_din.crf ..\..\User\bsp\src\bsp_din.c]
                          THUMB

                          AREA ||i.bsp_InitDin||, CODE, READONLY, ALIGN=2

                  bsp_InitDin PROC
;;;10     */
;;;11     void bsp_InitDin(void)
000000  b508              PUSH     {r3,lr}
;;;12     {
;;;13     	GPIO_InitTypeDef GPIO_InitStructure;
;;;14     
;;;15     	/* 打开GPIO时钟 */
;;;16     	RCC_APB2PeriphClockCmd(RCC_ALL_DIN, ENABLE);
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;17     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE); 
00000a  2101              MOVS     r1,#1
00000c  4608              MOV      r0,r1
00000e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;18     	GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE); 
000012  2101              MOVS     r1,#1
000014  481f              LDR      r0,|L1.148|
000016  f7fffffe          BL       GPIO_PinRemapConfig
;;;19     	
;;;20     	//配置输入引脚
;;;21     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;		/* 设为输入口 */
00001a  2004              MOVS     r0,#4
00001c  f88d0003          STRB     r0,[sp,#3]
;;;22     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	      /* IO口最大速度 */
000020  2003              MOVS     r0,#3
000022  f88d0002          STRB     r0,[sp,#2]
;;;23     	
;;;24     	GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_DIN1;
000026  2008              MOVS     r0,#8
000028  f8ad0000          STRH     r0,[sp,#0]
;;;25     	GPIO_Init(GPIO_PORT_DIN1, &GPIO_InitStructure);
00002c  4669              MOV      r1,sp
00002e  481a              LDR      r0,|L1.152|
000030  f7fffffe          BL       GPIO_Init
;;;26     	
;;;27     	GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_DIN2;
000034  2010              MOVS     r0,#0x10
000036  f8ad0000          STRH     r0,[sp,#0]
;;;28     	GPIO_Init(GPIO_PORT_DIN2, &GPIO_InitStructure);
00003a  4669              MOV      r1,sp
00003c  4816              LDR      r0,|L1.152|
00003e  f7fffffe          BL       GPIO_Init
;;;29     	
;;;30     	GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_DIN3;
000042  f44f6000          MOV      r0,#0x800
000046  f8ad0000          STRH     r0,[sp,#0]
;;;31     	GPIO_Init(GPIO_PORT_DIN3, &GPIO_InitStructure);
00004a  4669              MOV      r1,sp
00004c  4813              LDR      r0,|L1.156|
00004e  f7fffffe          BL       GPIO_Init
;;;32     	
;;;33     	GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_DIN4;
000052  f44f5080          MOV      r0,#0x1000
000056  f8ad0000          STRH     r0,[sp,#0]
;;;34     	GPIO_Init(GPIO_PORT_DIN4, &GPIO_InitStructure);
00005a  4669              MOV      r1,sp
00005c  480f              LDR      r0,|L1.156|
00005e  f7fffffe          BL       GPIO_Init
;;;35     	
;;;36     	GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_DIN5;
000062  f44f7080          MOV      r0,#0x100
000066  f8ad0000          STRH     r0,[sp,#0]
;;;37     	GPIO_Init(GPIO_PORT_DIN5, &GPIO_InitStructure);
00006a  4669              MOV      r1,sp
00006c  480c              LDR      r0,|L1.160|
00006e  f7fffffe          BL       GPIO_Init
;;;38     	
;;;39     	GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_DIN6;
000072  f44f7000          MOV      r0,#0x200
000076  f8ad0000          STRH     r0,[sp,#0]
;;;40     	GPIO_Init(GPIO_PORT_DIN6, &GPIO_InitStructure);
00007a  4669              MOV      r1,sp
00007c  4808              LDR      r0,|L1.160|
00007e  f7fffffe          BL       GPIO_Init
;;;41     	
;;;42     	GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_DIN7;
000082  2080              MOVS     r0,#0x80
000084  f8ad0000          STRH     r0,[sp,#0]
;;;43     	GPIO_Init(GPIO_PORT_DIN7, &GPIO_InitStructure);
000088  4669              MOV      r1,sp
00008a  4805              LDR      r0,|L1.160|
00008c  f7fffffe          BL       GPIO_Init
;;;44     	
;;;45     }
000090  bd08              POP      {r3,pc}
;;;46     
                          ENDP

000092  0000              DCW      0x0000
                  |L1.148|
                          DCD      0x00300200
                  |L1.152|
                          DCD      0x40010c00
                  |L1.156|
                          DCD      0x40010800
                  |L1.160|
                          DCD      0x40011000

                          AREA ||i.bsp_ReadDin||, CODE, READONLY, ALIGN=2

                  bsp_ReadDin PROC
;;;54     */
;;;55     uint8_t bsp_ReadDin(uint8_t _no)
000000  b570              PUSH     {r4-r6,lr}
;;;56     {
000002  4604              MOV      r4,r0
;;;57     	uint8_t ret = 0;
000004  2500              MOVS     r5,#0
;;;58     	_no--;
000006  1e60              SUBS     r0,r4,#1
000008  b2c4              UXTB     r4,r0
;;;59     	if(_no == 0)
00000a  b934              CBNZ     r4,|L2.26|
;;;60     	{
;;;61     		ret = (!(GPIO_ReadInputData(GPIO_PORT_DIN1)&GPIO_PIN_DIN1)) ? 1 : 0;
00000c  481d              LDR      r0,|L2.132|
00000e  f7fffffe          BL       GPIO_ReadInputData
000012  2101              MOVS     r1,#1
000014  ea2105d0          BIC      r5,r1,r0,LSR #3
000018  e032              B        |L2.128|
                  |L2.26|
;;;62     	}
;;;63     	else if(_no == 1)
00001a  2c01              CMP      r4,#1
00001c  d106              BNE      |L2.44|
;;;64     	{
;;;65     		ret = (!(GPIO_ReadInputData(GPIO_PORT_DIN2)&GPIO_PIN_DIN2)) ? 1 : 0;
00001e  4819              LDR      r0,|L2.132|
000020  f7fffffe          BL       GPIO_ReadInputData
000024  2101              MOVS     r1,#1
000026  ea211510          BIC      r5,r1,r0,LSR #4
00002a  e029              B        |L2.128|
                  |L2.44|
;;;66     	}
;;;67     	else if(_no == 2)
00002c  2c02              CMP      r4,#2
00002e  d106              BNE      |L2.62|
;;;68     	{
;;;69     		ret = (!(GPIO_ReadInputData(GPIO_PORT_DIN3)&GPIO_PIN_DIN3)) ? 1 : 0;
000030  4815              LDR      r0,|L2.136|
000032  f7fffffe          BL       GPIO_ReadInputData
000036  2101              MOVS     r1,#1
000038  ea2125d0          BIC      r5,r1,r0,LSR #11
00003c  e020              B        |L2.128|
                  |L2.62|
;;;70     	}
;;;71     	else if(_no == 3)
00003e  2c03              CMP      r4,#3
000040  d106              BNE      |L2.80|
;;;72     	{
;;;73     		ret = (!(GPIO_ReadInputData(GPIO_PORT_DIN4)&GPIO_PIN_DIN4)) ? 1 : 0;
000042  4811              LDR      r0,|L2.136|
000044  f7fffffe          BL       GPIO_ReadInputData
000048  2101              MOVS     r1,#1
00004a  ea213510          BIC      r5,r1,r0,LSR #12
00004e  e017              B        |L2.128|
                  |L2.80|
;;;74     	}
;;;75     	else if(_no == 4)
000050  2c04              CMP      r4,#4
000052  d105              BNE      |L2.96|
;;;76     	{
;;;77     		ret = ((GPIO_ReadInputData(GPIO_PORT_DIN5)&GPIO_PIN_DIN5)) ? 1 : 0;
000054  480d              LDR      r0,|L2.140|
000056  f7fffffe          BL       GPIO_ReadInputData
00005a  f3c02500          UBFX     r5,r0,#8,#1
00005e  e00f              B        |L2.128|
                  |L2.96|
;;;78     	}
;;;79     	else if(_no == 5)
000060  2c05              CMP      r4,#5
000062  d105              BNE      |L2.112|
;;;80     	{
;;;81     		ret = ((GPIO_ReadInputData(GPIO_PORT_DIN6)&GPIO_PIN_DIN6)) ? 1 : 0;
000064  4809              LDR      r0,|L2.140|
000066  f7fffffe          BL       GPIO_ReadInputData
00006a  f3c02540          UBFX     r5,r0,#9,#1
00006e  e007              B        |L2.128|
                  |L2.112|
;;;82     	}
;;;83     	else if(_no == 6)
000070  2c06              CMP      r4,#6
000072  d105              BNE      |L2.128|
;;;84     	{
;;;85     		ret = (!(GPIO_ReadInputData(GPIO_PORT_DIN7)&GPIO_PIN_DIN7)) ? 1 : 0;
000074  4805              LDR      r0,|L2.140|
000076  f7fffffe          BL       GPIO_ReadInputData
00007a  2101              MOVS     r1,#1
00007c  ea2115d0          BIC      r5,r1,r0,LSR #7
                  |L2.128|
;;;86     	}	
;;;87     	return ret;
000080  4628              MOV      r0,r5
;;;88     }
000082  bd70              POP      {r4-r6,pc}
;;;89     
                          ENDP

                  |L2.132|
                          DCD      0x40010c00
                  |L2.136|
                          DCD      0x40010800
                  |L2.140|
                          DCD      0x40011000

                          AREA ||i.bsp_ReadDinAll||, CODE, READONLY, ALIGN=2

                  bsp_ReadDinAll PROC
;;;97     */
;;;98     uint8_t bsp_ReadDinAll(void)
000000  b510              PUSH     {r4,lr}
;;;99     {
;;;100    	uint8_t ret = 0;
000002  2400              MOVS     r4,#0
;;;101    	
;;;102    	if(!(GPIO_ReadInputData(GPIO_PORT_DIN1)&GPIO_PIN_DIN1))
000004  4823              LDR      r0,|L3.148|
000006  f7fffffe          BL       GPIO_ReadInputData
00000a  f0100f08          TST      r0,#8
00000e  d102              BNE      |L3.22|
;;;103    	{
;;;104    		ret |= 0x01;
000010  f0440401          ORR      r4,r4,#1
000014  e000              B        |L3.24|
                  |L3.22|
;;;105      }
;;;106    	else
;;;107    	{
;;;108    		ret &=~0x01;
000016  2400              MOVS     r4,#0
                  |L3.24|
;;;109      }
;;;110    	
;;;111    	if(!(GPIO_ReadInputData(GPIO_PORT_DIN2)&GPIO_PIN_DIN2))
000018  481e              LDR      r0,|L3.148|
00001a  f7fffffe          BL       GPIO_ReadInputData
00001e  f0100f10          TST      r0,#0x10
000022  d102              BNE      |L3.42|
;;;112    	{
;;;113    		ret |= 0x02;
000024  f0440402          ORR      r4,r4,#2
000028  e000              B        |L3.44|
                  |L3.42|
;;;114      }
;;;115    	else
;;;116    	{
;;;117    		ret &=~0x02;
00002a  bf00              NOP      
                  |L3.44|
;;;118      }
;;;119    	
;;;120    	if(!(GPIO_ReadInputData(GPIO_PORT_DIN3)&GPIO_PIN_DIN3))	
00002c  481a              LDR      r0,|L3.152|
00002e  f7fffffe          BL       GPIO_ReadInputData
000032  f4106f00          TST      r0,#0x800
000036  d102              BNE      |L3.62|
;;;121    	{
;;;122    		ret |= 0x04;
000038  f0440404          ORR      r4,r4,#4
00003c  e000              B        |L3.64|
                  |L3.62|
;;;123      }
;;;124    	else
;;;125    	{
;;;126    		ret &=~0x04;
00003e  bf00              NOP      
                  |L3.64|
;;;127      }
;;;128    	
;;;129    	if(!(GPIO_ReadInputData(GPIO_PORT_DIN4)&GPIO_PIN_DIN4))
000040  4815              LDR      r0,|L3.152|
000042  f7fffffe          BL       GPIO_ReadInputData
000046  f4105f80          TST      r0,#0x1000
00004a  d102              BNE      |L3.82|
;;;130    	{
;;;131    		ret |= 0x08;
00004c  f0440408          ORR      r4,r4,#8
000050  e000              B        |L3.84|
                  |L3.82|
;;;132      }
;;;133    	else
;;;134    	{
;;;135    		ret &=~0x08;
000052  bf00              NOP      
                  |L3.84|
;;;136      }
;;;137    	
;;;138    	if(GPIO_ReadInputData(GPIO_PORT_DIN5)&GPIO_PIN_DIN5)
000054  4811              LDR      r0,|L3.156|
000056  f7fffffe          BL       GPIO_ReadInputData
00005a  f4107f80          TST      r0,#0x100
00005e  d002              BEQ      |L3.102|
;;;139    	{
;;;140    		ret |= 0x10;
000060  f0440410          ORR      r4,r4,#0x10
000064  e000              B        |L3.104|
                  |L3.102|
;;;141      }
;;;142    	else
;;;143    	{
;;;144    		ret &=~0x10;
000066  bf00              NOP      
                  |L3.104|
;;;145      }
;;;146    
;;;147    	if(GPIO_ReadInputData(GPIO_PORT_DIN6)&GPIO_PIN_DIN6)
000068  480c              LDR      r0,|L3.156|
00006a  f7fffffe          BL       GPIO_ReadInputData
00006e  f4107f00          TST      r0,#0x200
000072  d002              BEQ      |L3.122|
;;;148    	{
;;;149    		ret |= 0x20;
000074  f0440420          ORR      r4,r4,#0x20
000078  e000              B        |L3.124|
                  |L3.122|
;;;150      }
;;;151    	else
;;;152    	{
;;;153    		ret &=~0x20;
00007a  bf00              NOP      
                  |L3.124|
;;;154      }
;;;155    	
;;;156    	if(!(GPIO_ReadInputData(GPIO_PORT_DIN7)&GPIO_PIN_DIN7))
00007c  4807              LDR      r0,|L3.156|
00007e  f7fffffe          BL       GPIO_ReadInputData
000082  f0100f80          TST      r0,#0x80
000086  d102              BNE      |L3.142|
;;;157    	{
;;;158    		ret |= 0x40;
000088  f0440440          ORR      r4,r4,#0x40
00008c  e000              B        |L3.144|
                  |L3.142|
;;;159      }
;;;160    	else
;;;161    	{
;;;162    		ret &=~0x40;
00008e  bf00              NOP      
                  |L3.144|
;;;163      }
;;;164    	
;;;165    	return ret;
000090  4620              MOV      r0,r4
;;;166    }
000092  bd10              POP      {r4,pc}
                          ENDP

                  |L3.148|
                          DCD      0x40010c00
                  |L3.152|
                          DCD      0x40010800
                  |L3.156|
                          DCD      0x40011000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_din.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_bsp_din_c_f85047eb____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_din_c_f85047eb____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_bsp_din_c_f85047eb____REVSH|
#line 128
|__asm___9_bsp_din_c_f85047eb____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
