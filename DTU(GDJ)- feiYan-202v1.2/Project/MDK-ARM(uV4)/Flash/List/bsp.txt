; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\Flash\Obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\Flash\Obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M3\RealView -I..\..\Malloc -I..\..\User\Modbus -Id:\Keil_v4\ARM\RV31\INC -Id:\Keil_v4\ARM\CMSIS\Include -Id:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Flash\Obj\bsp.crf ..\..\User\bsp\bsp.c]
                          THUMB

                          AREA ||i.BSP_CPU_ClkFreq||, CODE, READONLY, ALIGN=1

                  BSP_CPU_ClkFreq PROC
;;;38     
;;;39     CPU_INT32U  BSP_CPU_ClkFreq (void)
000000  b500              PUSH     {lr}
;;;40     {
000002  b085              SUB      sp,sp,#0x14
;;;41         RCC_ClocksTypeDef  rcc_clocks;
;;;42     
;;;43         RCC_GetClocksFreq(&rcc_clocks);
000004  4668              MOV      r0,sp
000006  f7fffffe          BL       RCC_GetClocksFreq
;;;44         return ((CPU_INT32U)rcc_clocks.HCLK_Frequency);
00000a  9801              LDR      r0,[sp,#4]
;;;45     }
00000c  b005              ADD      sp,sp,#0x14
00000e  bd00              POP      {pc}
;;;46     
                          ENDP


                          AREA ||i.BSP_Tick_Init||, CODE, READONLY, ALIGN=2

                  BSP_Tick_Init PROC
;;;55     */
;;;56     void BSP_Tick_Init (void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;57     {
;;;58         CPU_INT32U  cpu_clk_freq;
;;;59         CPU_INT32U  cnts;
;;;60         
;;;61         cpu_clk_freq = BSP_CPU_ClkFreq();                           /* 获取系统时钟  */
000004  f7fffffe          BL       BSP_CPU_ClkFreq
000008  4605              MOV      r5,r0
;;;62         
;;;63     #if (OS_VERSION >= 30000u)
;;;64         cnts  = cpu_clk_freq / (CPU_INT32U)OSCfg_TickRate_Hz;     
00000a  4813              LDR      r0,|L2.88|
00000c  6800              LDR      r0,[r0,#0]  ; OSCfg_TickRate_Hz
00000e  fbb5f4f0          UDIV     r4,r5,r0
;;;65     #else
;;;66         cnts  = cpu_clk_freq / (CPU_INT32U)OS_TICKS_PER_SEC;        /* 获得滴答定时器的参数  */
;;;67     #endif
;;;68         
;;;69     //	OS_CPU_SysTickInit(cnts);                                   
;;;70     	SysTick_Config(cnts);
000012  4621              MOV      r1,r4
000014  f1b17f80          CMP      r1,#0x1000000
000018  d300              BCC      |L2.28|
00001a  e01b              B        |L2.84|
                  |L2.28|
00001c  f021407f          BIC      r0,r1,#0xff000000
000020  1e40              SUBS     r0,r0,#1
000022  f04f22e0          MOV      r2,#0xe000e000
000026  6150              STR      r0,[r2,#0x14]
000028  1750              ASRS     r0,r2,#29
00002a  220f              MOVS     r2,#0xf
00002c  2800              CMP      r0,#0
00002e  da06              BGE      |L2.62|
000030  0113              LSLS     r3,r2,#4
000032  4e0a              LDR      r6,|L2.92|
000034  f000070f          AND      r7,r0,#0xf
000038  1f3f              SUBS     r7,r7,#4
00003a  55f3              STRB     r3,[r6,r7]
00003c  e002              B        |L2.68|
                  |L2.62|
00003e  0116              LSLS     r6,r2,#4
000040  4b07              LDR      r3,|L2.96|
000042  541e              STRB     r6,[r3,r0]
                  |L2.68|
000044  bf00              NOP      
000046  2000              MOVS     r0,#0
000048  f04f22e0          MOV      r2,#0xe000e000
00004c  6190              STR      r0,[r2,#0x18]
00004e  2007              MOVS     r0,#7
000050  6110              STR      r0,[r2,#0x10]
000052  bf00              NOP      
                  |L2.84|
;;;71     }
000054  e8bd81f0          POP      {r4-r8,pc}
;;;72     
                          ENDP

                  |L2.88|
                          DCD      OSCfg_TickRate_Hz
                  |L2.92|
                          DCD      0xe000ed18
                  |L2.96|
                          DCD      0xe000e400

                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=1

                  bsp_Init PROC
;;;11     */
;;;12     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;13     {
;;;14     	/* 使能CRC校验, 用于开启STemWin的使用 */
;;;15     	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_CRC, ENABLE);
000002  2101              MOVS     r1,#1
000004  2040              MOVS     r0,#0x40
000006  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;16     	
;;;17     	/* 优先级分组设置为4 */
;;;18     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
00000a  f44f7040          MOV      r0,#0x300
00000e  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;19     
;;;20     	bsp_InitUart(); 	
000012  f7fffffe          BL       bsp_InitUart
;;;21     	bsp_InitLed(); 
000016  f7fffffe          BL       bsp_InitLed
;;;22     //	bsp_InitDin();
;;;23     	bsp_InitDout();
00001a  f7fffffe          BL       bsp_InitDout
;;;24     //	bsp_InitSPIBus();
;;;25     //	bsp_InitSFlash();
;;;26     	AIR208_Init();
00001e  f7fffffe          BL       AIR208_Init
;;;27     }
000022  bd10              POP      {r4,pc}
;;;28     
                          ENDP


                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer10ms PROC
;;;81     */
;;;82     void bsp_RunPer10ms(void)
000000  4770              BX       lr
;;;83     {
;;;84     
;;;85     }
;;;86     
                          ENDP


                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer1ms PROC
;;;95     */
;;;96     void bsp_RunPer1ms(void)
000000  4770              BX       lr
;;;97     {
;;;98     
;;;99     }
;;;100    /***************************** 安富莱电子 www.armfly.com (END OF FILE) *********************************/
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 128
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
