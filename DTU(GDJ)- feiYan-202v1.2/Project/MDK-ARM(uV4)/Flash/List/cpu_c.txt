; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\Flash\Obj\cpu_c.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\Flash\Obj\cpu_c.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M3\RealView -I..\..\Malloc -I..\..\User\Modbus -Id:\Keil_v4\ARM\RV31\INC -Id:\Keil_v4\ARM\CMSIS\Include -Id:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Flash\Obj\cpu_c.crf ..\..\uCOS-III\uC-CPU\ARM-Cortex-M3\RealView\cpu_c.c]
                          THUMB

                          AREA ||i.CPU_BitBandClr||, CODE, READONLY, ALIGN=2

                  CPU_BitBandClr PROC
;;;138    
;;;139    void  CPU_BitBandClr (CPU_ADDR    addr,
000000  b510              PUSH     {r4,lr}
;;;140                          CPU_INT08U  bit_nbr)
;;;141    {
;;;142        CPU_ADDR  bit_word_off;
;;;143        CPU_ADDR  bit_word_addr;
;;;144    
;;;145    
;;;146        if ((addr >= CPU_BIT_BAND_SRAM_REG_LO) &&
000002  f1b05f00          CMP      r0,#0x20000000
000006  d30a              BCC      |L1.30|
;;;147            (addr <= CPU_BIT_BAND_SRAM_REG_HI)) {
000008  4c0c              LDR      r4,|L1.60|
00000a  42a0              CMP      r0,r4
00000c  d807              BHI      |L1.30|
;;;148            bit_word_off  = ((addr - CPU_BIT_BAND_SRAM_REG_LO  ) * 32) + (bit_nbr * 4);
00000e  0144              LSLS     r4,r0,#5
000010  eb040381          ADD      r3,r4,r1,LSL #2
;;;149            bit_word_addr = CPU_BIT_BAND_SRAM_BASE   + bit_word_off;
000014  f1035208          ADD      r2,r3,#0x22000000
;;;150    
;;;151          *(volatile CPU_INT32U *)(bit_word_addr) = 0;
000018  2400              MOVS     r4,#0
00001a  6014              STR      r4,[r2,#0]
00001c  e00c              B        |L1.56|
                  |L1.30|
;;;152    
;;;153        } else if ((addr >= CPU_BIT_BAND_PERIPH_REG_LO) &&
00001e  f1b04f80          CMP      r0,#0x40000000
000022  d309              BCC      |L1.56|
;;;154                   (addr <= CPU_BIT_BAND_PERIPH_REG_HI)) {
000024  4c06              LDR      r4,|L1.64|
000026  42a0              CMP      r0,r4
000028  d806              BHI      |L1.56|
;;;155            bit_word_off  = ((addr - CPU_BIT_BAND_PERIPH_REG_LO) * 32) + (bit_nbr * 4);
00002a  0144              LSLS     r4,r0,#5
00002c  eb040381          ADD      r3,r4,r1,LSL #2
;;;156            bit_word_addr = CPU_BIT_BAND_PERIPH_BASE + bit_word_off;
000030  f1034284          ADD      r2,r3,#0x42000000
;;;157    
;;;158          *(volatile CPU_INT32U *)(bit_word_addr) = 0;
000034  2400              MOVS     r4,#0
000036  6014              STR      r4,[r2,#0]
                  |L1.56|
;;;159        }
;;;160    }
000038  bd10              POP      {r4,pc}
;;;161    
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x200fffff
                  |L1.64|
                          DCD      0x400fffff

                          AREA ||i.CPU_BitBandSet||, CODE, READONLY, ALIGN=2

                  CPU_BitBandSet PROC
;;;180    
;;;181    void  CPU_BitBandSet (CPU_ADDR    addr,
000000  b510              PUSH     {r4,lr}
;;;182                          CPU_INT08U  bit_nbr)
;;;183    {
;;;184        CPU_ADDR  bit_word_off;
;;;185        CPU_ADDR  bit_word_addr;
;;;186    
;;;187    
;;;188        if ((addr >= CPU_BIT_BAND_SRAM_REG_LO) &&
000002  f1b05f00          CMP      r0,#0x20000000
000006  d30a              BCC      |L2.30|
;;;189            (addr <= CPU_BIT_BAND_SRAM_REG_HI)) {
000008  4c0c              LDR      r4,|L2.60|
00000a  42a0              CMP      r0,r4
00000c  d807              BHI      |L2.30|
;;;190            bit_word_off  = ((addr - CPU_BIT_BAND_SRAM_REG_LO  ) * 32) + (bit_nbr * 4);
00000e  0144              LSLS     r4,r0,#5
000010  eb040381          ADD      r3,r4,r1,LSL #2
;;;191            bit_word_addr = CPU_BIT_BAND_SRAM_BASE   + bit_word_off;
000014  f1035208          ADD      r2,r3,#0x22000000
;;;192    
;;;193          *(volatile CPU_INT32U *)(bit_word_addr) = 1;
000018  2401              MOVS     r4,#1
00001a  6014              STR      r4,[r2,#0]
00001c  e00c              B        |L2.56|
                  |L2.30|
;;;194    
;;;195        } else if ((addr >= CPU_BIT_BAND_PERIPH_REG_LO) &&
00001e  f1b04f80          CMP      r0,#0x40000000
000022  d309              BCC      |L2.56|
;;;196                   (addr <= CPU_BIT_BAND_PERIPH_REG_HI)) {
000024  4c06              LDR      r4,|L2.64|
000026  42a0              CMP      r0,r4
000028  d806              BHI      |L2.56|
;;;197            bit_word_off  = ((addr - CPU_BIT_BAND_PERIPH_REG_LO) * 32) + (bit_nbr * 4);
00002a  0144              LSLS     r4,r0,#5
00002c  eb040381          ADD      r3,r4,r1,LSL #2
;;;198            bit_word_addr = CPU_BIT_BAND_PERIPH_BASE + bit_word_off;
000030  f1034284          ADD      r2,r3,#0x42000000
;;;199    
;;;200          *(volatile CPU_INT32U *)(bit_word_addr) = 1;
000034  2401              MOVS     r4,#1
000036  6014              STR      r4,[r2,#0]
                  |L2.56|
;;;201        }
;;;202    }
000038  bd10              POP      {r4,pc}
;;;203    
                          ENDP

00003a  0000              DCW      0x0000
                  |L2.60|
                          DCD      0x200fffff
                  |L2.64|
                          DCD      0x400fffff

                          AREA ||i.CPU_IntSrcDis||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcDis PROC
;;;253    
;;;254    void  CPU_IntSrcDis (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;255    {
000004  4604              MOV      r4,r0
;;;256        CPU_INT08U  group;
;;;257        CPU_INT08U  pos_max;
;;;258        CPU_INT08U  nbr;
;;;259        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;260    
;;;261    
;;;262        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d27c              BCS      |L3.264|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f10142d          DCB      0x0f,0x10,0x14,0x2d
000018  46090a0b          DCB      0x46,0x09,0x0a,0x0b
00001c  0c11120d          DCB      0x0c,0x11,0x12,0x0d
000020  135f              DCB      0x13,0x5f
;;;263            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;264            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;265            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;266            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;267            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;268            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;269                 break;
00002c  e09f              B        |L3.366|
;;;270    
;;;271    
;;;272                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;273            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;274            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;275            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;276            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000032  bf00              NOP      
;;;277            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000034  bf00              NOP      
;;;278            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000036  bf00              NOP      
;;;279                 break;
000038  e099              B        |L3.366|
;;;280    
;;;281            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;282                 CPU_CRITICAL_ENTER();
00003a  bf00              NOP      
00003c  bf00              NOP      
00003e  f7fffffe          BL       CPU_SR_Save
000042  4680              MOV      r8,r0
000044  bf00              NOP      
000046  f7fffffe          BL       CPU_IntDisMeasStart
00004a  bf00              NOP      
;;;283                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_MEMFAULTENA;
00004c  4849              LDR      r0,|L3.372|
00004e  6800              LDR      r0,[r0,#0]
000050  f4203080          BIC      r0,r0,#0x10000
000054  4947              LDR      r1,|L3.372|
000056  6008              STR      r0,[r1,#0]
;;;284                 CPU_CRITICAL_EXIT();
000058  bf00              NOP      
00005a  f7fffffe          BL       CPU_IntDisMeasStop
00005e  bf00              NOP      
000060  4640              MOV      r0,r8
000062  f7fffffe          BL       CPU_SR_Restore
000066  bf00              NOP      
000068  bf00              NOP      
;;;285                 break;
00006a  e080              B        |L3.366|
;;;286    
;;;287            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;288                 CPU_CRITICAL_ENTER();
00006c  bf00              NOP      
00006e  bf00              NOP      
000070  f7fffffe          BL       CPU_SR_Save
000074  4680              MOV      r8,r0
000076  bf00              NOP      
000078  f7fffffe          BL       CPU_IntDisMeasStart
00007c  bf00              NOP      
;;;289                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_BUSFAULTENA;
00007e  483d              LDR      r0,|L3.372|
000080  6800              LDR      r0,[r0,#0]
000082  f4203000          BIC      r0,r0,#0x20000
000086  493b              LDR      r1,|L3.372|
000088  6008              STR      r0,[r1,#0]
;;;290                 CPU_CRITICAL_EXIT();
00008a  bf00              NOP      
00008c  f7fffffe          BL       CPU_IntDisMeasStop
000090  bf00              NOP      
000092  4640              MOV      r0,r8
000094  f7fffffe          BL       CPU_SR_Restore
000098  bf00              NOP      
00009a  bf00              NOP      
;;;291                 break;
00009c  e067              B        |L3.366|
;;;292    
;;;293            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;294                 CPU_CRITICAL_ENTER();
00009e  bf00              NOP      
0000a0  bf00              NOP      
0000a2  f7fffffe          BL       CPU_SR_Save
0000a6  4680              MOV      r8,r0
0000a8  bf00              NOP      
0000aa  f7fffffe          BL       CPU_IntDisMeasStart
0000ae  bf00              NOP      
;;;295                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_USGFAULTENA;
0000b0  4830              LDR      r0,|L3.372|
0000b2  6800              LDR      r0,[r0,#0]
0000b4  f4202080          BIC      r0,r0,#0x40000
0000b8  492e              LDR      r1,|L3.372|
0000ba  6008              STR      r0,[r1,#0]
;;;296                 CPU_CRITICAL_EXIT();
0000bc  bf00              NOP      
0000be  f7fffffe          BL       CPU_IntDisMeasStop
0000c2  bf00              NOP      
0000c4  4640              MOV      r0,r8
0000c6  f7fffffe          BL       CPU_SR_Restore
0000ca  bf00              NOP      
0000cc  bf00              NOP      
;;;297                 break;
0000ce  e04e              B        |L3.366|
;;;298    
;;;299            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;300                 CPU_CRITICAL_ENTER();
0000d0  bf00              NOP      
0000d2  bf00              NOP      
0000d4  f7fffffe          BL       CPU_SR_Save
0000d8  4680              MOV      r8,r0
0000da  bf00              NOP      
0000dc  f7fffffe          BL       CPU_IntDisMeasStart
0000e0  bf00              NOP      
;;;301                 CPU_REG_NVIC_ST_CTRL &= ~CPU_REG_NVIC_ST_CTRL_ENABLE;
0000e2  f04f20e0          MOV      r0,#0xe000e000
0000e6  6900              LDR      r0,[r0,#0x10]
0000e8  f0200001          BIC      r0,r0,#1
0000ec  f04f21e0          MOV      r1,#0xe000e000
0000f0  6108              STR      r0,[r1,#0x10]
;;;302                 CPU_CRITICAL_EXIT();
0000f2  bf00              NOP      
0000f4  f7fffffe          BL       CPU_IntDisMeasStop
0000f8  bf00              NOP      
0000fa  4640              MOV      r0,r8
0000fc  f7fffffe          BL       CPU_SR_Restore
000100  bf00              NOP      
000102  bf00              NOP      
;;;303                 break;
000104  e033              B        |L3.366|
000106  e7ff              B        |L3.264|
                  |L3.264|
;;;304    
;;;305    
;;;306                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;307            default:
;;;308                pos_max = CPU_INT_SRC_POS_MAX;
000108  f04f20e0          MOV      r0,#0xe000e000
00010c  6840              LDR      r0,[r0,#4]
00010e  1c40              ADDS     r0,r0,#1
000110  2110              MOVS     r1,#0x10
000112  eb011040          ADD      r0,r1,r0,LSL #5
000116  b2c6              UXTB     r6,r0
;;;309                if (pos < pos_max) {                                /* See Note #3.                                         */
000118  42b4              CMP      r4,r6
00011a  da27              BGE      |L3.364|
;;;310                     group = (pos - 16) / 32;
00011c  f1a40010          SUB      r0,r4,#0x10
000120  17c1              ASRS     r1,r0,#31
000122  eb0061d1          ADD      r1,r0,r1,LSR #27
000126  f3c11547          UBFX     r5,r1,#5,#8
;;;311                     nbr   = (pos - 16) % 32;
00012a  17c1              ASRS     r1,r0,#31
00012c  eb0061d1          ADD      r1,r0,r1,LSR #27
000130  1149              ASRS     r1,r1,#5
000132  eba01141          SUB      r1,r0,r1,LSL #5
000136  b2cf              UXTB     r7,r1
;;;312    
;;;313                     CPU_CRITICAL_ENTER();
000138  bf00              NOP      
00013a  bf00              NOP      
00013c  f7fffffe          BL       CPU_SR_Save
000140  4680              MOV      r8,r0
000142  bf00              NOP      
000144  f7fffffe          BL       CPU_IntDisMeasStart
000148  bf00              NOP      
;;;314                     CPU_REG_NVIC_CLREN(group) = DEF_BIT(nbr);
00014a  2001              MOVS     r0,#1
00014c  40b8              LSLS     r0,r0,r7
00014e  f04f21e0          MOV      r1,#0xe000e000
000152  eb010185          ADD      r1,r1,r5,LSL #2
000156  f8c10180          STR      r0,[r1,#0x180]
;;;315                     CPU_CRITICAL_EXIT();
00015a  bf00              NOP      
00015c  f7fffffe          BL       CPU_IntDisMeasStop
000160  bf00              NOP      
000162  4640              MOV      r0,r8
000164  f7fffffe          BL       CPU_SR_Restore
000168  bf00              NOP      
00016a  bf00              NOP      
                  |L3.364|
;;;316                 }
;;;317                 break;
00016c  bf00              NOP      
                  |L3.366|
00016e  bf00              NOP                            ;269
;;;318        }
;;;319    }
000170  e8bd81f0          POP      {r4-r8,pc}
;;;320    
                          ENDP

                  |L3.372|
                          DCD      0xe000ed24

                          AREA ||i.CPU_IntSrcEn||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcEn PROC
;;;341    
;;;342    void  CPU_IntSrcEn (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;343    {
000004  4604              MOV      r4,r0
;;;344        CPU_INT08U  group;
;;;345        CPU_INT08U  nbr;
;;;346        CPU_INT08U  pos_max;
;;;347        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;348    
;;;349    
;;;350        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d27c              BCS      |L4.264|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f10142d          DCB      0x0f,0x10,0x14,0x2d
000018  46090a0b          DCB      0x46,0x09,0x0a,0x0b
00001c  0c11120d          DCB      0x0c,0x11,0x12,0x0d
000020  135f              DCB      0x13,0x5f
;;;351            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;352            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;353            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;354            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;355            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;356            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;357                 break;
00002c  e09f              B        |L4.366|
;;;358    
;;;359    
;;;360                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;361            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;362            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;363            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;364            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000032  bf00              NOP      
;;;365            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000034  bf00              NOP      
;;;366            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000036  bf00              NOP      
;;;367                 break;
000038  e099              B        |L4.366|
;;;368    
;;;369            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;370                 CPU_CRITICAL_ENTER();
00003a  bf00              NOP      
00003c  bf00              NOP      
00003e  f7fffffe          BL       CPU_SR_Save
000042  4680              MOV      r8,r0
000044  bf00              NOP      
000046  f7fffffe          BL       CPU_IntDisMeasStart
00004a  bf00              NOP      
;;;371                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_MEMFAULTENA;
00004c  4849              LDR      r0,|L4.372|
00004e  6800              LDR      r0,[r0,#0]
000050  f4403080          ORR      r0,r0,#0x10000
000054  4947              LDR      r1,|L4.372|
000056  6008              STR      r0,[r1,#0]
;;;372                 CPU_CRITICAL_EXIT();
000058  bf00              NOP      
00005a  f7fffffe          BL       CPU_IntDisMeasStop
00005e  bf00              NOP      
000060  4640              MOV      r0,r8
000062  f7fffffe          BL       CPU_SR_Restore
000066  bf00              NOP      
000068  bf00              NOP      
;;;373                 break;
00006a  e080              B        |L4.366|
;;;374    
;;;375            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;376                 CPU_CRITICAL_ENTER();
00006c  bf00              NOP      
00006e  bf00              NOP      
000070  f7fffffe          BL       CPU_SR_Save
000074  4680              MOV      r8,r0
000076  bf00              NOP      
000078  f7fffffe          BL       CPU_IntDisMeasStart
00007c  bf00              NOP      
;;;377                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_BUSFAULTENA;
00007e  483d              LDR      r0,|L4.372|
000080  6800              LDR      r0,[r0,#0]
000082  f4403000          ORR      r0,r0,#0x20000
000086  493b              LDR      r1,|L4.372|
000088  6008              STR      r0,[r1,#0]
;;;378                 CPU_CRITICAL_EXIT();
00008a  bf00              NOP      
00008c  f7fffffe          BL       CPU_IntDisMeasStop
000090  bf00              NOP      
000092  4640              MOV      r0,r8
000094  f7fffffe          BL       CPU_SR_Restore
000098  bf00              NOP      
00009a  bf00              NOP      
;;;379                 break;
00009c  e067              B        |L4.366|
;;;380    
;;;381            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;382                 CPU_CRITICAL_ENTER();
00009e  bf00              NOP      
0000a0  bf00              NOP      
0000a2  f7fffffe          BL       CPU_SR_Save
0000a6  4680              MOV      r8,r0
0000a8  bf00              NOP      
0000aa  f7fffffe          BL       CPU_IntDisMeasStart
0000ae  bf00              NOP      
;;;383                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_USGFAULTENA;
0000b0  4830              LDR      r0,|L4.372|
0000b2  6800              LDR      r0,[r0,#0]
0000b4  f4402080          ORR      r0,r0,#0x40000
0000b8  492e              LDR      r1,|L4.372|
0000ba  6008              STR      r0,[r1,#0]
;;;384                 CPU_CRITICAL_EXIT();
0000bc  bf00              NOP      
0000be  f7fffffe          BL       CPU_IntDisMeasStop
0000c2  bf00              NOP      
0000c4  4640              MOV      r0,r8
0000c6  f7fffffe          BL       CPU_SR_Restore
0000ca  bf00              NOP      
0000cc  bf00              NOP      
;;;385                 break;
0000ce  e04e              B        |L4.366|
;;;386    
;;;387            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;388                 CPU_CRITICAL_ENTER();
0000d0  bf00              NOP      
0000d2  bf00              NOP      
0000d4  f7fffffe          BL       CPU_SR_Save
0000d8  4680              MOV      r8,r0
0000da  bf00              NOP      
0000dc  f7fffffe          BL       CPU_IntDisMeasStart
0000e0  bf00              NOP      
;;;389                 CPU_REG_NVIC_ST_CTRL |= CPU_REG_NVIC_ST_CTRL_ENABLE;
0000e2  f04f20e0          MOV      r0,#0xe000e000
0000e6  6900              LDR      r0,[r0,#0x10]
0000e8  f0400001          ORR      r0,r0,#1
0000ec  f04f21e0          MOV      r1,#0xe000e000
0000f0  6108              STR      r0,[r1,#0x10]
;;;390                 CPU_CRITICAL_EXIT();
0000f2  bf00              NOP      
0000f4  f7fffffe          BL       CPU_IntDisMeasStop
0000f8  bf00              NOP      
0000fa  4640              MOV      r0,r8
0000fc  f7fffffe          BL       CPU_SR_Restore
000100  bf00              NOP      
000102  bf00              NOP      
;;;391                 break;
000104  e033              B        |L4.366|
000106  e7ff              B        |L4.264|
                  |L4.264|
;;;392    
;;;393    
;;;394                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;395            default:
;;;396                pos_max = CPU_INT_SRC_POS_MAX;
000108  f04f20e0          MOV      r0,#0xe000e000
00010c  6840              LDR      r0,[r0,#4]
00010e  1c40              ADDS     r0,r0,#1
000110  2110              MOVS     r1,#0x10
000112  eb011040          ADD      r0,r1,r0,LSL #5
000116  b2c7              UXTB     r7,r0
;;;397                if (pos < pos_max) {                                /* See Note #3.                                         */
000118  42bc              CMP      r4,r7
00011a  da27              BGE      |L4.364|
;;;398                     group = (pos - 16) / 32;
00011c  f1a40010          SUB      r0,r4,#0x10
000120  17c1              ASRS     r1,r0,#31
000122  eb0061d1          ADD      r1,r0,r1,LSR #27
000126  f3c11547          UBFX     r5,r1,#5,#8
;;;399                     nbr   = (pos - 16) % 32;
00012a  17c1              ASRS     r1,r0,#31
00012c  eb0061d1          ADD      r1,r0,r1,LSR #27
000130  1149              ASRS     r1,r1,#5
000132  eba01141          SUB      r1,r0,r1,LSL #5
000136  b2ce              UXTB     r6,r1
;;;400    
;;;401                     CPU_CRITICAL_ENTER();
000138  bf00              NOP      
00013a  bf00              NOP      
00013c  f7fffffe          BL       CPU_SR_Save
000140  4680              MOV      r8,r0
000142  bf00              NOP      
000144  f7fffffe          BL       CPU_IntDisMeasStart
000148  bf00              NOP      
;;;402                     CPU_REG_NVIC_SETEN(group) = DEF_BIT(nbr);
00014a  2001              MOVS     r0,#1
00014c  40b0              LSLS     r0,r0,r6
00014e  f04f21e0          MOV      r1,#0xe000e000
000152  eb010185          ADD      r1,r1,r5,LSL #2
000156  f8c10100          STR      r0,[r1,#0x100]
;;;403                     CPU_CRITICAL_EXIT();
00015a  bf00              NOP      
00015c  f7fffffe          BL       CPU_IntDisMeasStop
000160  bf00              NOP      
000162  4640              MOV      r0,r8
000164  f7fffffe          BL       CPU_SR_Restore
000168  bf00              NOP      
00016a  bf00              NOP      
                  |L4.364|
;;;404                 }
;;;405                 break;
00016c  bf00              NOP      
                  |L4.366|
00016e  bf00              NOP                            ;357
;;;406        }
;;;407    }
000170  e8bd81f0          POP      {r4-r8,pc}
;;;408    
                          ENDP

                  |L4.372|
                          DCD      0xe000ed24

                          AREA ||i.CPU_IntSrcPendClr||, CODE, READONLY, ALIGN=1

                  CPU_IntSrcPendClr PROC
;;;440    
;;;441    void  CPU_IntSrcPendClr (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;442    
;;;443    {
000004  4604              MOV      r4,r0
;;;444        CPU_INT08U  group;
;;;445        CPU_INT08U  nbr;
;;;446        CPU_INT08U  pos_max;
;;;447        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;448    
;;;449    
;;;450        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d219              BCS      |L5.66|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f101115          DCB      0x0f,0x10,0x11,0x15
000018  16090a0b          DCB      0x16,0x09,0x0a,0x0b
00001c  0c12130d          DCB      0x0c,0x12,0x13,0x0d
000020  1417              DCB      0x14,0x17
;;;451            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;452            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;453            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;454            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;455            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;456            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;457                 break;
00002c  e03c              B        |L5.168|
;;;458                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;459            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;460            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;461            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;462            case CPU_INT_MEM:                                       /* Memory management (see Note #2).                     */
000032  bf00              NOP      
;;;463            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000034  bf00              NOP      
;;;464            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000036  bf00              NOP      
;;;465            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000038  bf00              NOP      
;;;466            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
00003a  bf00              NOP      
;;;467            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
00003c  bf00              NOP      
;;;468            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
00003e  bf00              NOP      
;;;469                 break;
000040  e032              B        |L5.168|
                  |L5.66|
;;;470                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;471            default:
;;;472                pos_max = CPU_INT_SRC_POS_MAX;
000042  f04f20e0          MOV      r0,#0xe000e000
000046  6840              LDR      r0,[r0,#4]
000048  1c40              ADDS     r0,r0,#1
00004a  2110              MOVS     r1,#0x10
00004c  eb011040          ADD      r0,r1,r0,LSL #5
000050  b2c7              UXTB     r7,r0
;;;473                if (pos < pos_max) {                                /* See Note #3.                                         */
000052  42bc              CMP      r4,r7
000054  da27              BGE      |L5.166|
;;;474                     group = (pos - 16) / 32;
000056  f1a40010          SUB      r0,r4,#0x10
00005a  17c1              ASRS     r1,r0,#31
00005c  eb0061d1          ADD      r1,r0,r1,LSR #27
000060  f3c11547          UBFX     r5,r1,#5,#8
;;;475                     nbr   = (pos - 16) % 32;
000064  17c1              ASRS     r1,r0,#31
000066  eb0061d1          ADD      r1,r0,r1,LSR #27
00006a  1149              ASRS     r1,r1,#5
00006c  eba01141          SUB      r1,r0,r1,LSL #5
000070  b2ce              UXTB     r6,r1
;;;476    
;;;477                     CPU_CRITICAL_ENTER();
000072  bf00              NOP      
000074  bf00              NOP      
000076  f7fffffe          BL       CPU_SR_Save
00007a  4680              MOV      r8,r0
00007c  bf00              NOP      
00007e  f7fffffe          BL       CPU_IntDisMeasStart
000082  bf00              NOP      
;;;478                     CPU_REG_NVIC_CLRPEND(group) = DEF_BIT(nbr);
000084  2001              MOVS     r0,#1
000086  40b0              LSLS     r0,r0,r6
000088  f04f21e0          MOV      r1,#0xe000e000
00008c  eb010185          ADD      r1,r1,r5,LSL #2
000090  f8c10280          STR      r0,[r1,#0x280]
;;;479                     CPU_CRITICAL_EXIT();
000094  bf00              NOP      
000096  f7fffffe          BL       CPU_IntDisMeasStop
00009a  bf00              NOP      
00009c  4640              MOV      r0,r8
00009e  f7fffffe          BL       CPU_SR_Restore
0000a2  bf00              NOP      
0000a4  bf00              NOP      
                  |L5.166|
;;;480                 }
;;;481                 break;
0000a6  bf00              NOP      
                  |L5.168|
0000a8  bf00              NOP                            ;457
;;;482        }
;;;483    }
0000aa  e8bd81f0          POP      {r4-r8,pc}
;;;484    
                          ENDP


                          AREA ||i.CPU_IntSrcPrioGet||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcPrioGet PROC
;;;641    
;;;642    CPU_INT16S  CPU_IntSrcPrioGet (CPU_INT08U  pos)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;643    {
000004  4606              MOV      r6,r0
;;;644        CPU_INT08U  group;
;;;645        CPU_INT08U  nbr;
;;;646        CPU_INT08U  pos_max;
;;;647        CPU_INT16S  prio;
;;;648        CPU_INT32U  temp;
;;;649        CPU_SR_ALLOC();
000006  f04f0a00          MOV      r10,#0
;;;650    
;;;651    
;;;652        switch (pos) {
00000a  2e10              CMP      r6,#0x10
00000c  d274              BCS      |L6.248|
00000e  e8dff006          TBB      [pc,r6]
000012  080f              DCB      0x08,0x0f
000014  1215182e          DCB      0x12,0x15,0x18,0x2e
000018  45090a0b          DCB      0x45,0x09,0x0a,0x0b
00001c  0c5c740d          DCB      0x0c,0x5c,0x74,0x0d
000020  8ba3              DCB      0x8b,0xa3
;;;653            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;654            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;655            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;656            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;657            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;658            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;659                 prio = DEF_INT_16S_MIN_VAL;
00002c  4c73              LDR      r4,|L6.508|
;;;660                 break;
00002e  e0e1              B        |L6.500|
;;;661    
;;;662    
;;;663                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;664            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;665                 prio = -3;
000030  f06f0402          MVN      r4,#2
;;;666                 break;
000034  e0de              B        |L6.500|
;;;667    
;;;668            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
;;;669                 prio = -2;
000036  f06f0401          MVN      r4,#1
;;;670                 break;
00003a  e0db              B        |L6.500|
;;;671    
;;;672            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
;;;673                 prio = -1;
00003c  f04f34ff          MOV      r4,#0xffffffff
;;;674                 break;
000040  e0d8              B        |L6.500|
;;;675    
;;;676    
;;;677            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;678                 CPU_CRITICAL_ENTER();
000042  bf00              NOP      
000044  bf00              NOP      
000046  f7fffffe          BL       CPU_SR_Save
00004a  4682              MOV      r10,r0
00004c  bf00              NOP      
00004e  f7fffffe          BL       CPU_IntDisMeasStart
000052  bf00              NOP      
;;;679                 temp = CPU_REG_NVIC_SHPRI1;
000054  486a              LDR      r0,|L6.512|
000056  6805              LDR      r5,[r0,#0]
;;;680                 prio = (temp >> (0 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000058  b2ec              UXTB     r4,r5
;;;681                 CPU_CRITICAL_EXIT();
00005a  bf00              NOP      
00005c  f7fffffe          BL       CPU_IntDisMeasStop
000060  bf00              NOP      
000062  4650              MOV      r0,r10
000064  f7fffffe          BL       CPU_SR_Restore
000068  bf00              NOP      
00006a  bf00              NOP      
;;;682                 break;
00006c  e0c2              B        |L6.500|
;;;683    
;;;684    
;;;685            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;686                 CPU_CRITICAL_ENTER();
00006e  bf00              NOP      
000070  bf00              NOP      
000072  f7fffffe          BL       CPU_SR_Save
000076  4682              MOV      r10,r0
000078  bf00              NOP      
00007a  f7fffffe          BL       CPU_IntDisMeasStart
00007e  bf00              NOP      
;;;687                 temp = CPU_REG_NVIC_SHPRI1;
000080  485f              LDR      r0,|L6.512|
000082  6805              LDR      r5,[r0,#0]
;;;688                 prio = (temp >> (1 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000084  f3c52407          UBFX     r4,r5,#8,#8
;;;689                 CPU_CRITICAL_EXIT();
000088  bf00              NOP      
00008a  f7fffffe          BL       CPU_IntDisMeasStop
00008e  bf00              NOP      
000090  4650              MOV      r0,r10
000092  f7fffffe          BL       CPU_SR_Restore
000096  bf00              NOP      
000098  bf00              NOP      
;;;690                 break;
00009a  e0ab              B        |L6.500|
;;;691    
;;;692    
;;;693            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;694                 CPU_CRITICAL_ENTER();
00009c  bf00              NOP      
00009e  bf00              NOP      
0000a0  f7fffffe          BL       CPU_SR_Save
0000a4  4682              MOV      r10,r0
0000a6  bf00              NOP      
0000a8  f7fffffe          BL       CPU_IntDisMeasStart
0000ac  bf00              NOP      
;;;695                 temp = CPU_REG_NVIC_SHPRI1;
0000ae  4854              LDR      r0,|L6.512|
0000b0  6805              LDR      r5,[r0,#0]
;;;696                 prio = (temp >> (2 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0000b2  f3c54407          UBFX     r4,r5,#16,#8
;;;697                 CPU_CRITICAL_EXIT();
0000b6  bf00              NOP      
0000b8  f7fffffe          BL       CPU_IntDisMeasStop
0000bc  bf00              NOP      
0000be  4650              MOV      r0,r10
0000c0  f7fffffe          BL       CPU_SR_Restore
0000c4  bf00              NOP      
0000c6  bf00              NOP      
;;;698                 break;
0000c8  e094              B        |L6.500|
;;;699    
;;;700            case CPU_INT_SVCALL:                                    /* SVCall.                                              */
;;;701                 CPU_CRITICAL_ENTER();
0000ca  bf00              NOP      
0000cc  bf00              NOP      
0000ce  f7fffffe          BL       CPU_SR_Save
0000d2  4682              MOV      r10,r0
0000d4  bf00              NOP      
0000d6  f7fffffe          BL       CPU_IntDisMeasStart
0000da  bf00              NOP      
;;;702                 temp = CPU_REG_NVIC_SHPRI2;
0000dc  4848              LDR      r0,|L6.512|
0000de  1d00              ADDS     r0,r0,#4
0000e0  6805              LDR      r5,[r0,#0]
;;;703                 prio = (temp >> (3 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0000e2  0e2c              LSRS     r4,r5,#24
;;;704                 CPU_CRITICAL_EXIT();
0000e4  bf00              NOP      
0000e6  f7fffffe          BL       CPU_IntDisMeasStop
0000ea  bf00              NOP      
0000ec  4650              MOV      r0,r10
0000ee  f7fffffe          BL       CPU_SR_Restore
0000f2  bf00              NOP      
0000f4  bf00              NOP      
;;;705                 break;
0000f6  e07d              B        |L6.500|
                  |L6.248|
0000f8  e045              B        |L6.390|
;;;706    
;;;707            case CPU_INT_DBGMON:                                    /* Debug monitor.                                       */
;;;708                 CPU_CRITICAL_ENTER();
0000fa  bf00              NOP      
0000fc  bf00              NOP      
0000fe  f7fffffe          BL       CPU_SR_Save
000102  4682              MOV      r10,r0
000104  bf00              NOP      
000106  f7fffffe          BL       CPU_IntDisMeasStart
00010a  bf00              NOP      
;;;709                 temp = CPU_REG_NVIC_SHPRI3;
00010c  483c              LDR      r0,|L6.512|
00010e  3008              ADDS     r0,r0,#8
000110  6805              LDR      r5,[r0,#0]
;;;710                 prio = (temp >> (0 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000112  b2ec              UXTB     r4,r5
;;;711                 CPU_CRITICAL_EXIT();
000114  bf00              NOP      
000116  f7fffffe          BL       CPU_IntDisMeasStop
00011a  bf00              NOP      
00011c  4650              MOV      r0,r10
00011e  f7fffffe          BL       CPU_SR_Restore
000122  bf00              NOP      
000124  bf00              NOP      
;;;712                 break;
000126  e065              B        |L6.500|
;;;713    
;;;714            case CPU_INT_PENDSV:                                    /* PendSV.                                              */
;;;715                 CPU_CRITICAL_ENTER();
000128  bf00              NOP      
00012a  bf00              NOP      
00012c  f7fffffe          BL       CPU_SR_Save
000130  4682              MOV      r10,r0
000132  bf00              NOP      
000134  f7fffffe          BL       CPU_IntDisMeasStart
000138  bf00              NOP      
;;;716                 temp = CPU_REG_NVIC_SHPRI3;
00013a  4831              LDR      r0,|L6.512|
00013c  3008              ADDS     r0,r0,#8
00013e  6805              LDR      r5,[r0,#0]
;;;717                 prio = (temp >> (2 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000140  f3c54407          UBFX     r4,r5,#16,#8
;;;718                 CPU_CRITICAL_EXIT();
000144  bf00              NOP      
000146  f7fffffe          BL       CPU_IntDisMeasStop
00014a  bf00              NOP      
00014c  4650              MOV      r0,r10
00014e  f7fffffe          BL       CPU_SR_Restore
000152  bf00              NOP      
000154  bf00              NOP      
;;;719                 break;
000156  e04d              B        |L6.500|
;;;720    
;;;721            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;722                 CPU_CRITICAL_ENTER();
000158  bf00              NOP      
00015a  bf00              NOP      
00015c  f7fffffe          BL       CPU_SR_Save
000160  4682              MOV      r10,r0
000162  bf00              NOP      
000164  f7fffffe          BL       CPU_IntDisMeasStart
000168  bf00              NOP      
;;;723                 temp = CPU_REG_NVIC_SHPRI3;
00016a  4825              LDR      r0,|L6.512|
00016c  3008              ADDS     r0,r0,#8
00016e  6805              LDR      r5,[r0,#0]
;;;724                 prio = (temp >> (3 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000170  0e2c              LSRS     r4,r5,#24
;;;725                 CPU_CRITICAL_EXIT();
000172  bf00              NOP      
000174  f7fffffe          BL       CPU_IntDisMeasStop
000178  bf00              NOP      
00017a  4650              MOV      r0,r10
00017c  f7fffffe          BL       CPU_SR_Restore
000180  bf00              NOP      
000182  bf00              NOP      
;;;726                 break;
000184  e036              B        |L6.500|
                  |L6.390|
;;;727    
;;;728    
;;;729                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;730            default:
;;;731                pos_max = CPU_INT_SRC_POS_MAX;
000186  f04f20e0          MOV      r0,#0xe000e000
00018a  6840              LDR      r0,[r0,#4]
00018c  1c40              ADDS     r0,r0,#1
00018e  2110              MOVS     r1,#0x10
000190  eb011040          ADD      r0,r1,r0,LSL #5
000194  f00009ff          AND      r9,r0,#0xff
;;;732                if (pos < pos_max) {                                /* See Note #3.                                         */
000198  454e              CMP      r6,r9
00019a  da29              BGE      |L6.496|
;;;733                     group = (pos - 16) / 4;
00019c  f1a60010          SUB      r0,r6,#0x10
0001a0  17c1              ASRS     r1,r0,#31
0001a2  eb007191          ADD      r1,r0,r1,LSR #30
0001a6  f3c10787          UBFX     r7,r1,#2,#8
;;;734                     nbr   = (pos - 16) % 4;
0001aa  17c1              ASRS     r1,r0,#31
0001ac  eb007191          ADD      r1,r0,r1,LSR #30
0001b0  1089              ASRS     r1,r1,#2
0001b2  eba00181          SUB      r1,r0,r1,LSL #2
0001b6  f00108ff          AND      r8,r1,#0xff
;;;735    
;;;736                     CPU_CRITICAL_ENTER();
0001ba  bf00              NOP      
0001bc  bf00              NOP      
0001be  f7fffffe          BL       CPU_SR_Save
0001c2  4682              MOV      r10,r0
0001c4  bf00              NOP      
0001c6  f7fffffe          BL       CPU_IntDisMeasStart
0001ca  bf00              NOP      
;;;737                     temp  = CPU_REG_NVIC_PRIO(group);
0001cc  480d              LDR      r0,|L6.516|
0001ce  f8505027          LDR      r5,[r0,r7,LSL #2]
;;;738                     CPU_CRITICAL_EXIT();
0001d2  bf00              NOP      
0001d4  f7fffffe          BL       CPU_IntDisMeasStop
0001d8  bf00              NOP      
0001da  4650              MOV      r0,r10
0001dc  f7fffffe          BL       CPU_SR_Restore
0001e0  bf00              NOP      
0001e2  bf00              NOP      
;;;739    
;;;740                     prio  = (temp >> (nbr * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0001e4  ea4f00c8          LSL      r0,r8,#3
0001e8  fa25f000          LSR      r0,r5,r0
0001ec  b2c4              UXTB     r4,r0
0001ee  e000              B        |L6.498|
                  |L6.496|
;;;741                 } else {
;;;742                     prio  = DEF_INT_16S_MIN_VAL;
0001f0  4c02              LDR      r4,|L6.508|
                  |L6.498|
;;;743                 }
;;;744                 break;
0001f2  bf00              NOP      
                  |L6.500|
0001f4  bf00              NOP                            ;660
;;;745        }
;;;746    
;;;747    
;;;748        return (prio);
0001f6  4620              MOV      r0,r4
;;;749    }
0001f8  e8bd87f0          POP      {r4-r10,pc}
;;;750    
                          ENDP

                  |L6.508|
                          DCD      0xffff8000
                  |L6.512|
                          DCD      0xe000ed18
                  |L6.516|
                          DCD      0xe000e400

                          AREA ||i.CPU_IntSrcPrioSet||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcPrioSet PROC
;;;511    
;;;512    void  CPU_IntSrcPrioSet (CPU_INT08U  pos,
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;513                             CPU_INT08U  prio)
;;;514    {
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;515        CPU_INT08U  group;
;;;516        CPU_INT08U  nbr;
;;;517        CPU_INT08U  pos_max;
;;;518        CPU_INT32U  temp;
;;;519        CPU_SR_ALLOC();
000008  f04f0a00          MOV      r10,#0
;;;520    
;;;521    
;;;522        switch (pos) {
00000c  2e10              CMP      r6,#0x10
00000e  d27a              BCS      |L7.262|
000010  e8dff006          TBB      [pc,r6]
000014  080e0f10          DCB      0x08,0x0e,0x0f,0x10
000018  112a4409          DCB      0x11,0x2a,0x44,0x09
00001c  0a0b0c5e          DCB      0x0a,0x0b,0x0c,0x5e
000020  7a0d94af          DCB      0x7a,0x0d,0x94,0xaf
;;;523            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;524            case CPU_INT_RSVD_07:
000024  bf00              NOP      
;;;525            case CPU_INT_RSVD_08:
000026  bf00              NOP      
;;;526            case CPU_INT_RSVD_09:
000028  bf00              NOP      
;;;527            case CPU_INT_RSVD_10:
00002a  bf00              NOP      
;;;528            case CPU_INT_RSVD_13:
00002c  bf00              NOP      
;;;529                 break;
00002e  e0f8              B        |L7.546|
;;;530    
;;;531    
;;;532                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;533            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;534            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
000030  bf00              NOP      
;;;535            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000032  bf00              NOP      
;;;536                 break;
000034  e0f5              B        |L7.546|
;;;537    
;;;538            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;539                 CPU_CRITICAL_ENTER();
000036  bf00              NOP      
000038  bf00              NOP      
00003a  f7fffffe          BL       CPU_SR_Save
00003e  4682              MOV      r10,r0
000040  bf00              NOP      
000042  f7fffffe          BL       CPU_IntDisMeasStart
000046  bf00              NOP      
;;;540                 temp                 = CPU_REG_NVIC_SHPRI1;
000048  4877              LDR      r0,|L7.552|
00004a  6804              LDR      r4,[r0,#0]
;;;541                 temp                &= ~(DEF_OCTET_MASK << (0 * DEF_OCTET_NBR_BITS));
00004c  f02404ff          BIC      r4,r4,#0xff
;;;542                 temp                |=  (prio           << (0 * DEF_OCTET_NBR_BITS));
000050  432c              ORRS     r4,r4,r5
;;;543                 CPU_REG_NVIC_SHPRI1  = temp;
000052  6004              STR      r4,[r0,#0]
;;;544                 CPU_CRITICAL_EXIT();
000054  bf00              NOP      
000056  f7fffffe          BL       CPU_IntDisMeasStop
00005a  bf00              NOP      
00005c  4650              MOV      r0,r10
00005e  f7fffffe          BL       CPU_SR_Restore
000062  bf00              NOP      
000064  bf00              NOP      
;;;545                 break;
000066  e0dc              B        |L7.546|
;;;546    
;;;547            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;548                 CPU_CRITICAL_ENTER();
000068  bf00              NOP      
00006a  bf00              NOP      
00006c  f7fffffe          BL       CPU_SR_Save
000070  4682              MOV      r10,r0
000072  bf00              NOP      
000074  f7fffffe          BL       CPU_IntDisMeasStart
000078  bf00              NOP      
;;;549                 temp                 = CPU_REG_NVIC_SHPRI1;
00007a  486b              LDR      r0,|L7.552|
00007c  6804              LDR      r4,[r0,#0]
;;;550                 temp                &= ~(DEF_OCTET_MASK << (1 * DEF_OCTET_NBR_BITS));
00007e  f424447f          BIC      r4,r4,#0xff00
;;;551                 temp                |=  (prio           << (1 * DEF_OCTET_NBR_BITS));
000082  ea442405          ORR      r4,r4,r5,LSL #8
;;;552                 CPU_REG_NVIC_SHPRI1  = temp;
000086  6004              STR      r4,[r0,#0]
;;;553                 CPU_CRITICAL_EXIT();
000088  bf00              NOP      
00008a  f7fffffe          BL       CPU_IntDisMeasStop
00008e  bf00              NOP      
000090  4650              MOV      r0,r10
000092  f7fffffe          BL       CPU_SR_Restore
000096  bf00              NOP      
000098  bf00              NOP      
;;;554                 break;
00009a  e0c2              B        |L7.546|
;;;555    
;;;556            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;557                 CPU_CRITICAL_ENTER();
00009c  bf00              NOP      
00009e  bf00              NOP      
0000a0  f7fffffe          BL       CPU_SR_Save
0000a4  4682              MOV      r10,r0
0000a6  bf00              NOP      
0000a8  f7fffffe          BL       CPU_IntDisMeasStart
0000ac  bf00              NOP      
;;;558                 temp                 = CPU_REG_NVIC_SHPRI1;
0000ae  485e              LDR      r0,|L7.552|
0000b0  6804              LDR      r4,[r0,#0]
;;;559                 temp                &= ~(DEF_OCTET_MASK << (2 * DEF_OCTET_NBR_BITS));
0000b2  f424047f          BIC      r4,r4,#0xff0000
;;;560                 temp                |=  (prio           << (2 * DEF_OCTET_NBR_BITS));
0000b6  ea444405          ORR      r4,r4,r5,LSL #16
;;;561                 CPU_REG_NVIC_SHPRI1  = temp;
0000ba  6004              STR      r4,[r0,#0]
;;;562                 CPU_CRITICAL_EXIT();
0000bc  bf00              NOP      
0000be  f7fffffe          BL       CPU_IntDisMeasStop
0000c2  bf00              NOP      
0000c4  4650              MOV      r0,r10
0000c6  f7fffffe          BL       CPU_SR_Restore
0000ca  bf00              NOP      
0000cc  bf00              NOP      
;;;563                 break;
0000ce  e0a8              B        |L7.546|
;;;564    
;;;565            case CPU_INT_SVCALL:                                    /* SVCall.                                              */
;;;566                 CPU_CRITICAL_ENTER();
0000d0  bf00              NOP      
0000d2  bf00              NOP      
0000d4  f7fffffe          BL       CPU_SR_Save
0000d8  4682              MOV      r10,r0
0000da  bf00              NOP      
0000dc  f7fffffe          BL       CPU_IntDisMeasStart
0000e0  bf00              NOP      
;;;567                 temp                 = CPU_REG_NVIC_SHPRI2;
0000e2  4851              LDR      r0,|L7.552|
0000e4  1d00              ADDS     r0,r0,#4
0000e6  6804              LDR      r4,[r0,#0]
;;;568                 temp                &= ~((CPU_INT32U)DEF_OCTET_MASK << (3 * DEF_OCTET_NBR_BITS));
0000e8  f024447f          BIC      r4,r4,#0xff000000
;;;569                 temp                |=  (prio                       << (3 * DEF_OCTET_NBR_BITS));
0000ec  ea446405          ORR      r4,r4,r5,LSL #24
;;;570                 CPU_REG_NVIC_SHPRI2  = temp;
0000f0  6004              STR      r4,[r0,#0]
;;;571                 CPU_CRITICAL_EXIT();
0000f2  bf00              NOP      
0000f4  f7fffffe          BL       CPU_IntDisMeasStop
0000f8  bf00              NOP      
0000fa  4650              MOV      r0,r10
0000fc  f7fffffe          BL       CPU_SR_Restore
000100  bf00              NOP      
000102  bf00              NOP      
;;;572                 break;
000104  e08d              B        |L7.546|
                  |L7.262|
000106  e04f              B        |L7.424|
;;;573    
;;;574            case CPU_INT_DBGMON:                                    /* Debug monitor.                                       */
;;;575                 CPU_CRITICAL_ENTER();
000108  bf00              NOP      
00010a  bf00              NOP      
00010c  f7fffffe          BL       CPU_SR_Save
000110  4682              MOV      r10,r0
000112  bf00              NOP      
000114  f7fffffe          BL       CPU_IntDisMeasStart
000118  bf00              NOP      
;;;576                 temp                = CPU_REG_NVIC_SHPRI3;
00011a  4843              LDR      r0,|L7.552|
00011c  3008              ADDS     r0,r0,#8
00011e  6804              LDR      r4,[r0,#0]
;;;577                 temp                &= ~(DEF_OCTET_MASK << (0 * DEF_OCTET_NBR_BITS));
000120  f02404ff          BIC      r4,r4,#0xff
;;;578                 temp                |=  (prio           << (0 * DEF_OCTET_NBR_BITS));
000124  432c              ORRS     r4,r4,r5
;;;579                 CPU_REG_NVIC_SHPRI3  = temp;
000126  6004              STR      r4,[r0,#0]
;;;580                 CPU_CRITICAL_EXIT();
000128  bf00              NOP      
00012a  f7fffffe          BL       CPU_IntDisMeasStop
00012e  bf00              NOP      
000130  4650              MOV      r0,r10
000132  f7fffffe          BL       CPU_SR_Restore
000136  bf00              NOP      
000138  bf00              NOP      
;;;581                 break;
00013a  e072              B        |L7.546|
;;;582    
;;;583            case CPU_INT_PENDSV:                                    /* PendSV.                                              */
;;;584                 CPU_CRITICAL_ENTER();
00013c  bf00              NOP      
00013e  bf00              NOP      
000140  f7fffffe          BL       CPU_SR_Save
000144  4682              MOV      r10,r0
000146  bf00              NOP      
000148  f7fffffe          BL       CPU_IntDisMeasStart
00014c  bf00              NOP      
;;;585                 temp                 = CPU_REG_NVIC_SHPRI3;
00014e  4836              LDR      r0,|L7.552|
000150  3008              ADDS     r0,r0,#8
000152  6804              LDR      r4,[r0,#0]
;;;586                 temp                &= ~(DEF_OCTET_MASK << (2 * DEF_OCTET_NBR_BITS));
000154  f424047f          BIC      r4,r4,#0xff0000
;;;587                 temp                |=  (prio           << (2 * DEF_OCTET_NBR_BITS));
000158  ea444405          ORR      r4,r4,r5,LSL #16
;;;588                 CPU_REG_NVIC_SHPRI3  = temp;
00015c  6004              STR      r4,[r0,#0]
;;;589                 CPU_CRITICAL_EXIT();
00015e  bf00              NOP      
000160  f7fffffe          BL       CPU_IntDisMeasStop
000164  bf00              NOP      
000166  4650              MOV      r0,r10
000168  f7fffffe          BL       CPU_SR_Restore
00016c  bf00              NOP      
00016e  bf00              NOP      
;;;590                 break;
000170  e057              B        |L7.546|
;;;591    
;;;592            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;593                 CPU_CRITICAL_ENTER();
000172  bf00              NOP      
000174  bf00              NOP      
000176  f7fffffe          BL       CPU_SR_Save
00017a  4682              MOV      r10,r0
00017c  bf00              NOP      
00017e  f7fffffe          BL       CPU_IntDisMeasStart
000182  bf00              NOP      
;;;594                 temp                 = CPU_REG_NVIC_SHPRI3;
000184  4828              LDR      r0,|L7.552|
000186  3008              ADDS     r0,r0,#8
000188  6804              LDR      r4,[r0,#0]
;;;595                 temp                &= ~((CPU_INT32U)DEF_OCTET_MASK << (3 * DEF_OCTET_NBR_BITS));
00018a  f024447f          BIC      r4,r4,#0xff000000
;;;596                 temp                |=  (prio                       << (3 * DEF_OCTET_NBR_BITS));
00018e  ea446405          ORR      r4,r4,r5,LSL #24
;;;597                 CPU_REG_NVIC_SHPRI3  = temp;
000192  6004              STR      r4,[r0,#0]
;;;598                 CPU_CRITICAL_EXIT();
000194  bf00              NOP      
000196  f7fffffe          BL       CPU_IntDisMeasStop
00019a  bf00              NOP      
00019c  4650              MOV      r0,r10
00019e  f7fffffe          BL       CPU_SR_Restore
0001a2  bf00              NOP      
0001a4  bf00              NOP      
;;;599                 break;
0001a6  e03c              B        |L7.546|
                  |L7.424|
;;;600    
;;;601    
;;;602                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;603            default:
;;;604                pos_max = CPU_INT_SRC_POS_MAX;
0001a8  f04f20e0          MOV      r0,#0xe000e000
0001ac  6840              LDR      r0,[r0,#4]
0001ae  1c40              ADDS     r0,r0,#1
0001b0  2110              MOVS     r1,#0x10
0001b2  eb011040          ADD      r0,r1,r0,LSL #5
0001b6  f00009ff          AND      r9,r0,#0xff
;;;605                if (pos < pos_max) {                                /* See Note #3.                                         */
0001ba  454e              CMP      r6,r9
0001bc  da30              BGE      |L7.544|
;;;606                     group                    = (pos - 16) / 4;
0001be  f1a60010          SUB      r0,r6,#0x10
0001c2  17c1              ASRS     r1,r0,#31
0001c4  eb007191          ADD      r1,r0,r1,LSR #30
0001c8  f3c10787          UBFX     r7,r1,#2,#8
;;;607                     nbr                      = (pos - 16) % 4;
0001cc  17c1              ASRS     r1,r0,#31
0001ce  eb007191          ADD      r1,r0,r1,LSR #30
0001d2  1089              ASRS     r1,r1,#2
0001d4  eba00181          SUB      r1,r0,r1,LSL #2
0001d8  f00108ff          AND      r8,r1,#0xff
;;;608    
;;;609                     CPU_CRITICAL_ENTER();
0001dc  bf00              NOP      
0001de  bf00              NOP      
0001e0  f7fffffe          BL       CPU_SR_Save
0001e4  4682              MOV      r10,r0
0001e6  bf00              NOP      
0001e8  f7fffffe          BL       CPU_IntDisMeasStart
0001ec  bf00              NOP      
;;;610                     temp                     = CPU_REG_NVIC_PRIO(group);
0001ee  480f              LDR      r0,|L7.556|
0001f0  f8504027          LDR      r4,[r0,r7,LSL #2]
;;;611                     temp                    &= ~(DEF_OCTET_MASK << (nbr * DEF_OCTET_NBR_BITS));
0001f4  ea4f01c8          LSL      r1,r8,#3
0001f8  20ff              MOVS     r0,#0xff
0001fa  4088              LSLS     r0,r0,r1
0001fc  4384              BICS     r4,r4,r0
;;;612                     temp                    |=  (prio           << (nbr * DEF_OCTET_NBR_BITS));
0001fe  ea4f01c8          LSL      r1,r8,#3
000202  fa05f001          LSL      r0,r5,r1
000206  4304              ORRS     r4,r4,r0
;;;613                     CPU_REG_NVIC_PRIO(group) = temp;
000208  4808              LDR      r0,|L7.556|
00020a  f8404027          STR      r4,[r0,r7,LSL #2]
;;;614                     CPU_CRITICAL_EXIT();
00020e  bf00              NOP      
000210  f7fffffe          BL       CPU_IntDisMeasStop
000214  bf00              NOP      
000216  4650              MOV      r0,r10
000218  f7fffffe          BL       CPU_SR_Restore
00021c  bf00              NOP      
00021e  bf00              NOP      
                  |L7.544|
;;;615                 }
;;;616                 break;
000220  bf00              NOP      
                  |L7.546|
000222  bf00              NOP                            ;529
;;;617        }
;;;618    }
000224  e8bd87f0          POP      {r4-r10,pc}
;;;619    
                          ENDP

                  |L7.552|
                          DCD      0xe000ed18
                  |L7.556|
                          DCD      0xe000e400
