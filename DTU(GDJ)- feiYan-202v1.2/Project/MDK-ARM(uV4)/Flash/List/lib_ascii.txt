; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\Flash\Obj\lib_ascii.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\Flash\Obj\lib_ascii.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M3\RealView -I..\..\Malloc -I..\..\User\Modbus -Id:\Keil_v4\ARM\RV31\INC -Id:\Keil_v4\ARM\CMSIS\Include -Id:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Flash\Obj\lib_ascii.crf ..\..\uCOS-III\uC-LIB\lib_ascii.c]
                          THUMB

                          AREA ||i.ASCII_Cmp||, CODE, READONLY, ALIGN=1

                  ASCII_Cmp PROC
;;;640    
;;;641    CPU_BOOLEAN  ASCII_Cmp (CPU_CHAR  c1,
000000  b5f0              PUSH     {r4-r7,lr}
;;;642                            CPU_CHAR  c2)
;;;643    {
000002  4604              MOV      r4,r0
000004  460b              MOV      r3,r1
;;;644        CPU_CHAR     c1_upper;
;;;645        CPU_CHAR     c2_upper;
;;;646        CPU_BOOLEAN  cmp;
;;;647    
;;;648    
;;;649        c1_upper =  ASCII_ToUpper(c1);
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       ASCII_ToUpper
00000c  4605              MOV      r5,r0
;;;650        c2_upper =  ASCII_ToUpper(c2);
00000e  4618              MOV      r0,r3
000010  f7fffffe          BL       ASCII_ToUpper
000014  4606              MOV      r6,r0
;;;651        cmp      = (c1_upper == c2_upper) ? (DEF_YES) : (DEF_NO);
000016  42b5              CMP      r5,r6
000018  d101              BNE      |L1.30|
00001a  2001              MOVS     r0,#1
00001c  e000              B        |L1.32|
                  |L1.30|
00001e  2000              MOVS     r0,#0
                  |L1.32|
000020  4607              MOV      r7,r0
;;;652    
;;;653        return (cmp);
000022  4638              MOV      r0,r7
;;;654    }
000024  bdf0              POP      {r4-r7,pc}
;;;655    
                          ENDP


                          AREA ||i.ASCII_IsAlpha||, CODE, READONLY, ALIGN=1

                  ASCII_IsAlpha PROC
;;;155    
;;;156    CPU_BOOLEAN  ASCII_IsAlpha (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;157    {
;;;158        CPU_BOOLEAN  alpha;
;;;159    
;;;160    
;;;161        alpha = ASCII_IS_ALPHA(c);
000002  2941              CMP      r1,#0x41
000004  db03              BLT      |L2.14|
000006  295a              CMP      r1,#0x5a
000008  dc01              BGT      |L2.14|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L2.16|
                  |L2.14|
00000e  2200              MOVS     r2,#0
                  |L2.16|
000010  2a01              CMP      r2,#1
000012  d008              BEQ      |L2.38|
000014  2961              CMP      r1,#0x61
000016  db03              BLT      |L2.32|
000018  297a              CMP      r1,#0x7a
00001a  dc01              BGT      |L2.32|
00001c  2201              MOVS     r2,#1
00001e  e000              B        |L2.34|
                  |L2.32|
000020  2200              MOVS     r2,#0
                  |L2.34|
000022  2a01              CMP      r2,#1
000024  d101              BNE      |L2.42|
                  |L2.38|
000026  2201              MOVS     r2,#1
000028  e000              B        |L2.44|
                  |L2.42|
00002a  2200              MOVS     r2,#0
                  |L2.44|
00002c  4610              MOV      r0,r2
;;;162    
;;;163        return (alpha);
;;;164    }
00002e  4770              BX       lr
;;;165    
                          ENDP


                          AREA ||i.ASCII_IsAlphaNum||, CODE, READONLY, ALIGN=1

                  ASCII_IsAlphaNum PROC
;;;185    
;;;186    CPU_BOOLEAN  ASCII_IsAlphaNum (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;187    {
;;;188        CPU_BOOLEAN  alpha_num;
;;;189    
;;;190    
;;;191        alpha_num = ASCII_IS_ALPHA_NUM(c);
000002  2941              CMP      r1,#0x41
000004  db03              BLT      |L3.14|
000006  295a              CMP      r1,#0x5a
000008  dc01              BGT      |L3.14|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L3.16|
                  |L3.14|
00000e  2200              MOVS     r2,#0
                  |L3.16|
000010  2a01              CMP      r2,#1
000012  d008              BEQ      |L3.38|
000014  2961              CMP      r1,#0x61
000016  db03              BLT      |L3.32|
000018  297a              CMP      r1,#0x7a
00001a  dc01              BGT      |L3.32|
00001c  2201              MOVS     r2,#1
00001e  e000              B        |L3.34|
                  |L3.32|
000020  2200              MOVS     r2,#0
                  |L3.34|
000022  2a01              CMP      r2,#1
000024  d101              BNE      |L3.42|
                  |L3.38|
000026  2201              MOVS     r2,#1
000028  e000              B        |L3.44|
                  |L3.42|
00002a  2200              MOVS     r2,#0
                  |L3.44|
00002c  2a01              CMP      r2,#1
00002e  d008              BEQ      |L3.66|
000030  2930              CMP      r1,#0x30
000032  db03              BLT      |L3.60|
000034  2939              CMP      r1,#0x39
000036  dc01              BGT      |L3.60|
000038  2201              MOVS     r2,#1
00003a  e000              B        |L3.62|
                  |L3.60|
00003c  2200              MOVS     r2,#0
                  |L3.62|
00003e  2a01              CMP      r2,#1
000040  d101              BNE      |L3.70|
                  |L3.66|
000042  2201              MOVS     r2,#1
000044  e000              B        |L3.72|
                  |L3.70|
000046  2200              MOVS     r2,#0
                  |L3.72|
000048  4610              MOV      r0,r2
;;;192    
;;;193        return (alpha_num);
;;;194    }
00004a  4770              BX       lr
;;;195    
                          ENDP


                          AREA ||i.ASCII_IsBlank||, CODE, READONLY, ALIGN=1

                  ASCII_IsBlank PROC
;;;367    
;;;368    CPU_BOOLEAN  ASCII_IsBlank (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;369    {
;;;370        CPU_BOOLEAN  blank;
;;;371    
;;;372    
;;;373        blank = ASCII_IS_BLANK(c);
000002  2920              CMP      r1,#0x20
000004  d001              BEQ      |L4.10|
000006  2909              CMP      r1,#9
000008  d101              BNE      |L4.14|
                  |L4.10|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L4.16|
                  |L4.14|
00000e  2200              MOVS     r2,#0
                  |L4.16|
000010  4610              MOV      r0,r2
;;;374    
;;;375        return (blank);
;;;376    }
000012  4770              BX       lr
;;;377    
                          ENDP


                          AREA ||i.ASCII_IsCtrl||, CODE, READONLY, ALIGN=1

                  ASCII_IsCtrl PROC
;;;533    
;;;534    CPU_BOOLEAN  ASCII_IsCtrl (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;535    {
;;;536        CPU_BOOLEAN  ctrl;
;;;537    
;;;538    
;;;539        ctrl = ASCII_IS_CTRL(c);
000002  b24a              SXTB     r2,r1
000004  2a00              CMP      r2,#0
000006  db01              BLT      |L5.12|
000008  291f              CMP      r1,#0x1f
00000a  dd01              BLE      |L5.16|
                  |L5.12|
00000c  297f              CMP      r1,#0x7f
00000e  d101              BNE      |L5.20|
                  |L5.16|
000010  2201              MOVS     r2,#1
000012  e000              B        |L5.22|
                  |L5.20|
000014  2200              MOVS     r2,#0
                  |L5.22|
000016  4610              MOV      r0,r2
;;;540    
;;;541        return (ctrl);
;;;542    }
000018  4770              BX       lr
;;;543    
                          ENDP


                          AREA ||i.ASCII_IsDig||, CODE, READONLY, ALIGN=1

                  ASCII_IsDig PROC
;;;275    
;;;276    CPU_BOOLEAN  ASCII_IsDig (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;277    {
;;;278        CPU_BOOLEAN  dig;
;;;279    
;;;280    
;;;281        dig = ASCII_IS_DIG(c);
000002  2930              CMP      r1,#0x30
000004  db03              BLT      |L6.14|
000006  2939              CMP      r1,#0x39
000008  dc01              BGT      |L6.14|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L6.16|
                  |L6.14|
00000e  2200              MOVS     r2,#0
                  |L6.16|
000010  4610              MOV      r0,r2
;;;282    
;;;283        return (dig);
;;;284    }
000012  4770              BX       lr
;;;285    
                          ENDP


                          AREA ||i.ASCII_IsDigHex||, CODE, READONLY, ALIGN=1

                  ASCII_IsDigHex PROC
;;;334    
;;;335    CPU_BOOLEAN  ASCII_IsDigHex (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;336    {
;;;337        CPU_BOOLEAN  dig_hex;
;;;338    
;;;339    
;;;340        dig_hex = ASCII_IS_DIG_HEX(c);
000002  2930              CMP      r1,#0x30
000004  db01              BLT      |L7.10|
000006  2939              CMP      r1,#0x39
000008  dd07              BLE      |L7.26|
                  |L7.10|
00000a  2941              CMP      r1,#0x41
00000c  db01              BLT      |L7.18|
00000e  2946              CMP      r1,#0x46
000010  dd03              BLE      |L7.26|
                  |L7.18|
000012  2961              CMP      r1,#0x61
000014  db03              BLT      |L7.30|
000016  2966              CMP      r1,#0x66
000018  dc01              BGT      |L7.30|
                  |L7.26|
00001a  2201              MOVS     r2,#1
00001c  e000              B        |L7.32|
                  |L7.30|
00001e  2200              MOVS     r2,#0
                  |L7.32|
000020  4610              MOV      r0,r2
;;;341    
;;;342        return (dig_hex);
;;;343    }
000022  4770              BX       lr
;;;344    
                          ENDP


                          AREA ||i.ASCII_IsDigOct||, CODE, READONLY, ALIGN=1

                  ASCII_IsDigOct PROC
;;;304    
;;;305    CPU_BOOLEAN  ASCII_IsDigOct (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;306    {
;;;307        CPU_BOOLEAN  dig_oct;
;;;308    
;;;309    
;;;310        dig_oct = ASCII_IS_DIG_OCT(c);
000002  2930              CMP      r1,#0x30
000004  db03              BLT      |L8.14|
000006  2937              CMP      r1,#0x37
000008  dc01              BGT      |L8.14|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L8.16|
                  |L8.14|
00000e  2200              MOVS     r2,#0
                  |L8.16|
000010  4610              MOV      r0,r2
;;;311    
;;;312        return (dig_oct);
;;;313    }
000012  4770              BX       lr
;;;314    
                          ENDP


                          AREA ||i.ASCII_IsGraph||, CODE, READONLY, ALIGN=1

                  ASCII_IsGraph PROC
;;;469    
;;;470    CPU_BOOLEAN  ASCII_IsGraph (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;471    {
;;;472        CPU_BOOLEAN  graph;
;;;473    
;;;474    
;;;475        graph = ASCII_IS_GRAPH(c);
000002  2921              CMP      r1,#0x21
000004  db03              BLT      |L9.14|
000006  297e              CMP      r1,#0x7e
000008  dc01              BGT      |L9.14|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L9.16|
                  |L9.14|
00000e  2200              MOVS     r2,#0
                  |L9.16|
000010  4610              MOV      r0,r2
;;;476    
;;;477        return (graph);
;;;478    }
000012  4770              BX       lr
;;;479    
                          ENDP


                          AREA ||i.ASCII_IsLower||, CODE, READONLY, ALIGN=1

                  ASCII_IsLower PROC
;;;215    
;;;216    CPU_BOOLEAN  ASCII_IsLower (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;217    {
;;;218        CPU_BOOLEAN  lower;
;;;219    
;;;220    
;;;221        lower = ASCII_IS_LOWER(c);
000002  2961              CMP      r1,#0x61
000004  db03              BLT      |L10.14|
000006  297a              CMP      r1,#0x7a
000008  dc01              BGT      |L10.14|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L10.16|
                  |L10.14|
00000e  2200              MOVS     r2,#0
                  |L10.16|
000010  4610              MOV      r0,r2
;;;222    
;;;223        return (lower);
;;;224    }
000012  4770              BX       lr
;;;225    
                          ENDP


                          AREA ||i.ASCII_IsPrint||, CODE, READONLY, ALIGN=1

                  ASCII_IsPrint PROC
;;;435    
;;;436    CPU_BOOLEAN  ASCII_IsPrint (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;437    {
;;;438        CPU_BOOLEAN  print;
;;;439    
;;;440    
;;;441        print = ASCII_IS_PRINT(c);
000002  2920              CMP      r1,#0x20
000004  db03              BLT      |L11.14|
000006  297e              CMP      r1,#0x7e
000008  dc01              BGT      |L11.14|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L11.16|
                  |L11.14|
00000e  2200              MOVS     r2,#0
                  |L11.16|
000010  4610              MOV      r0,r2
;;;442    
;;;443        return (print);
;;;444    }
000012  4770              BX       lr
;;;445    
                          ENDP


                          AREA ||i.ASCII_IsPunct||, CODE, READONLY, ALIGN=1

                  ASCII_IsPunct PROC
;;;499    
;;;500    CPU_BOOLEAN  ASCII_IsPunct (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;501    {
;;;502        CPU_BOOLEAN  punct;
;;;503    
;;;504    
;;;505        punct = ASCII_IS_PUNCT(c);
000002  2920              CMP      r1,#0x20
000004  db03              BLT      |L12.14|
000006  297e              CMP      r1,#0x7e
000008  dc01              BGT      |L12.14|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L12.16|
                  |L12.14|
00000e  2200              MOVS     r2,#0
                  |L12.16|
000010  2a01              CMP      r2,#1
000012  d135              BNE      |L12.128|
000014  2920              CMP      r1,#0x20
000016  d009              BEQ      |L12.44|
000018  290d              CMP      r1,#0xd
00001a  d007              BEQ      |L12.44|
00001c  290a              CMP      r1,#0xa
00001e  d005              BEQ      |L12.44|
000020  290c              CMP      r1,#0xc
000022  d003              BEQ      |L12.44|
000024  2909              CMP      r1,#9
000026  d001              BEQ      |L12.44|
000028  290b              CMP      r1,#0xb
00002a  d101              BNE      |L12.48|
                  |L12.44|
00002c  2201              MOVS     r2,#1
00002e  e000              B        |L12.50|
                  |L12.48|
000030  2200              MOVS     r2,#0
                  |L12.50|
000032  bb2a              CBNZ     r2,|L12.128|
000034  2941              CMP      r1,#0x41
000036  db03              BLT      |L12.64|
000038  295a              CMP      r1,#0x5a
00003a  dc01              BGT      |L12.64|
00003c  2201              MOVS     r2,#1
00003e  e000              B        |L12.66|
                  |L12.64|
000040  2200              MOVS     r2,#0
                  |L12.66|
000042  2a01              CMP      r2,#1
000044  d008              BEQ      |L12.88|
000046  2961              CMP      r1,#0x61
000048  db03              BLT      |L12.82|
00004a  297a              CMP      r1,#0x7a
00004c  dc01              BGT      |L12.82|
00004e  2201              MOVS     r2,#1
000050  e000              B        |L12.84|
                  |L12.82|
000052  2200              MOVS     r2,#0
                  |L12.84|
000054  2a01              CMP      r2,#1
000056  d101              BNE      |L12.92|
                  |L12.88|
000058  2201              MOVS     r2,#1
00005a  e000              B        |L12.94|
                  |L12.92|
00005c  2200              MOVS     r2,#0
                  |L12.94|
00005e  2a01              CMP      r2,#1
000060  d008              BEQ      |L12.116|
000062  2930              CMP      r1,#0x30
000064  db03              BLT      |L12.110|
000066  2939              CMP      r1,#0x39
000068  dc01              BGT      |L12.110|
00006a  2201              MOVS     r2,#1
00006c  e000              B        |L12.112|
                  |L12.110|
00006e  2200              MOVS     r2,#0
                  |L12.112|
000070  2a01              CMP      r2,#1
000072  d101              BNE      |L12.120|
                  |L12.116|
000074  2201              MOVS     r2,#1
000076  e000              B        |L12.122|
                  |L12.120|
000078  2200              MOVS     r2,#0
                  |L12.122|
00007a  b90a              CBNZ     r2,|L12.128|
00007c  2201              MOVS     r2,#1
00007e  e000              B        |L12.130|
                  |L12.128|
000080  2200              MOVS     r2,#0
                  |L12.130|
000082  4610              MOV      r0,r2
;;;506    
;;;507        return (punct);
;;;508    }
000084  4770              BX       lr
;;;509    
                          ENDP


                          AREA ||i.ASCII_IsSpace||, CODE, READONLY, ALIGN=1

                  ASCII_IsSpace PROC
;;;401    
;;;402    CPU_BOOLEAN  ASCII_IsSpace (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;403    {
;;;404        CPU_BOOLEAN  space;
;;;405    
;;;406    
;;;407        space = ASCII_IS_SPACE(c);
000002  2920              CMP      r1,#0x20
000004  d009              BEQ      |L13.26|
000006  290d              CMP      r1,#0xd
000008  d007              BEQ      |L13.26|
00000a  290a              CMP      r1,#0xa
00000c  d005              BEQ      |L13.26|
00000e  290c              CMP      r1,#0xc
000010  d003              BEQ      |L13.26|
000012  2909              CMP      r1,#9
000014  d001              BEQ      |L13.26|
000016  290b              CMP      r1,#0xb
000018  d101              BNE      |L13.30|
                  |L13.26|
00001a  2201              MOVS     r2,#1
00001c  e000              B        |L13.32|
                  |L13.30|
00001e  2200              MOVS     r2,#0
                  |L13.32|
000020  4610              MOV      r0,r2
;;;408    
;;;409        return (space);
;;;410    }
000022  4770              BX       lr
;;;411    
                          ENDP


                          AREA ||i.ASCII_IsUpper||, CODE, READONLY, ALIGN=1

                  ASCII_IsUpper PROC
;;;245    
;;;246    CPU_BOOLEAN  ASCII_IsUpper (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;247    {
;;;248        CPU_BOOLEAN  upper;
;;;249    
;;;250    
;;;251        upper = ASCII_IS_UPPER(c);
000002  2941              CMP      r1,#0x41
000004  db03              BLT      |L14.14|
000006  295a              CMP      r1,#0x5a
000008  dc01              BGT      |L14.14|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L14.16|
                  |L14.14|
00000e  2200              MOVS     r2,#0
                  |L14.16|
000010  4610              MOV      r0,r2
;;;252    
;;;253        return (upper);
;;;254    }
000012  4770              BX       lr
;;;255    
                          ENDP


                          AREA ||i.ASCII_ToLower||, CODE, READONLY, ALIGN=1

                  ASCII_ToLower PROC
;;;571    
;;;572    CPU_CHAR  ASCII_ToLower (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;573    {
;;;574        CPU_CHAR  lower;
;;;575    
;;;576    
;;;577        lower = ASCII_TO_LOWER(c);
000002  2941              CMP      r1,#0x41
000004  db03              BLT      |L15.14|
000006  295a              CMP      r1,#0x5a
000008  dc01              BGT      |L15.14|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L15.16|
                  |L15.14|
00000e  2200              MOVS     r2,#0
                  |L15.16|
000010  2a01              CMP      r2,#1
000012  d102              BNE      |L15.26|
000014  f1010220          ADD      r2,r1,#0x20
000018  e000              B        |L15.28|
                  |L15.26|
00001a  460a              MOV      r2,r1
                  |L15.28|
00001c  b2d0              UXTB     r0,r2
;;;578    
;;;579        return (lower);
;;;580    }
00001e  4770              BX       lr
;;;581    
                          ENDP


                          AREA ||i.ASCII_ToUpper||, CODE, READONLY, ALIGN=1

                  ASCII_ToUpper PROC
;;;609    
;;;610    CPU_CHAR  ASCII_ToUpper (CPU_CHAR  c)
000000  4601              MOV      r1,r0
;;;611    {
;;;612        CPU_CHAR  upper;
;;;613    
;;;614    
;;;615        upper = ASCII_TO_UPPER(c);
000002  2961              CMP      r1,#0x61
000004  db03              BLT      |L16.14|
000006  297a              CMP      r1,#0x7a
000008  dc01              BGT      |L16.14|
00000a  2201              MOVS     r2,#1
00000c  e000              B        |L16.16|
                  |L16.14|
00000e  2200              MOVS     r2,#0
                  |L16.16|
000010  2a01              CMP      r2,#1
000012  d102              BNE      |L16.26|
000014  f1a10220          SUB      r2,r1,#0x20
000018  e000              B        |L16.28|
                  |L16.26|
00001a  460a              MOV      r2,r1
                  |L16.28|
00001c  b2d0              UXTB     r0,r2
;;;616    
;;;617        return (upper);
;;;618    }
00001e  4770              BX       lr
;;;619    
                          ENDP

