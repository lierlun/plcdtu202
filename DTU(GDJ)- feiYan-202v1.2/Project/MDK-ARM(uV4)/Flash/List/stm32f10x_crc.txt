; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\Flash\Obj\stm32f10x_crc.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\Flash\Obj\stm32f10x_crc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M3\RealView -I..\..\Malloc -I..\..\User\Modbus -Id:\Keil_v4\ARM\RV31\INC -Id:\Keil_v4\ARM\CMSIS\Include -Id:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Flash\Obj\stm32f10x_crc.crf ..\..\Libraries\STM32F10x_StdPeriph_Driver\src\stm32f10x_crc.c]
                          THUMB

                          AREA ||i.CRC_CalcBlockCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcBlockCRC PROC
;;;112      */
;;;113    uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
000000  b510              PUSH     {r4,lr}
;;;114    {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;115      uint32_t index = 0;
000006  2100              MOVS     r1,#0
;;;116      
;;;117      for(index = 0; index < BufferLength; index++)
000008  bf00              NOP      
00000a  e004              B        |L1.22|
                  |L1.12|
;;;118      {
;;;119        CRC->DR = pBuffer[index];
00000c  f8520021          LDR      r0,[r2,r1,LSL #2]
000010  4c03              LDR      r4,|L1.32|
000012  6020              STR      r0,[r4,#0]
000014  1c49              ADDS     r1,r1,#1              ;117
                  |L1.22|
000016  4299              CMP      r1,r3                 ;117
000018  d3f8              BCC      |L1.12|
;;;120      }
;;;121      return (CRC->DR);
00001a  4801              LDR      r0,|L1.32|
00001c  6800              LDR      r0,[r0,#0]
;;;122    }
00001e  bd10              POP      {r4,pc}
;;;123    
                          ENDP

                  |L1.32|
                          DCD      0x40023000

                          AREA ||i.CRC_CalcCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcCRC PROC
;;;99       */
;;;100    uint32_t CRC_CalcCRC(uint32_t Data)
000000  4601              MOV      r1,r0
;;;101    {
;;;102      CRC->DR = Data;
000002  4802              LDR      r0,|L2.12|
000004  6001              STR      r1,[r0,#0]
;;;103      
;;;104      return (CRC->DR);
000006  6800              LDR      r0,[r0,#0]
;;;105    }
000008  4770              BX       lr
;;;106    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0x40023000

                          AREA ||i.CRC_GetCRC||, CODE, READONLY, ALIGN=2

                  CRC_GetCRC PROC
;;;128      */
;;;129    uint32_t CRC_GetCRC(void)
000000  4801              LDR      r0,|L3.8|
;;;130    {
;;;131      return (CRC->DR);
000002  6800              LDR      r0,[r0,#0]
;;;132    }
000004  4770              BX       lr
;;;133    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0x40023000

                          AREA ||i.CRC_GetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_GetIDRegister PROC
;;;148      */
;;;149    uint8_t CRC_GetIDRegister(void)
000000  4801              LDR      r0,|L4.8|
;;;150    {
;;;151      return (CRC->IDR);
000002  7900              LDRB     r0,[r0,#4]
;;;152    }
000004  4770              BX       lr
;;;153    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40023000

                          AREA ||i.CRC_ResetDR||, CODE, READONLY, ALIGN=2

                  CRC_ResetDR PROC
;;;88       */
;;;89     void CRC_ResetDR(void)
000000  2001              MOVS     r0,#1
;;;90     {
;;;91       /* Reset CRC generator */
;;;92       CRC->CR = CRC_CR_RESET;
000002  4901              LDR      r1,|L5.8|
000004  6088              STR      r0,[r1,#8]
;;;93     }
000006  4770              BX       lr
;;;94     
                          ENDP

                  |L5.8|
                          DCD      0x40023000

                          AREA ||i.CRC_SetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_SetIDRegister PROC
;;;138      */
;;;139    void CRC_SetIDRegister(uint8_t IDValue)
000000  4901              LDR      r1,|L6.8|
;;;140    {
;;;141      CRC->IDR = IDValue;
000002  7108              STRB     r0,[r1,#4]
;;;142    }
000004  4770              BX       lr
;;;143    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40023000

;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm32f10x_crc.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_stm32f10x_crc_c_eea4c7d3____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_stm32f10x_crc_c_eea4c7d3____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_stm32f10x_crc_c_eea4c7d3____REVSH|
#line 128
|__asm___15_stm32f10x_crc_c_eea4c7d3____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
